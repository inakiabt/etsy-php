{
  "getMethodTable": {
    "name": "getMethodTable",
    "description": "Get a list of all methods available.",
    "uri": "/",
    "params": null,
    "defaults": null,
    "type": "ApiMethod",
    "visibility": "public",
    "http_method": "GET"
  },
  "getPublicBaseline": {
    "name": "getPublicBaseline",
    "description": "Pings a public v2 uri to get a performance baseline",
    "uri": "/baseline",
    "params": null,
    "defaults": null,
    "type": null,
    "visibility": "public",
    "http_method": "GET"
  },
  "getCategory": {
    "name": "getCategory",
    "description": "Retrieves a top-level Category by tag.",
    "uri": "/categories/:tag",
    "params": {
      "tag": "string"
    },
    "defaults": null,
    "type": "Category",
    "visibility": "public",
    "http_method": "GET"
  },
  "getSubCategory": {
    "name": "getSubCategory",
    "description": "Retrieves a second-level Category by tag and subtag.",
    "uri": "/categories/:tag/:subtag",
    "params": {
      "tag": "string",
      "subtag": "string"
    },
    "defaults": null,
    "type": "Category",
    "visibility": "public",
    "http_method": "GET"
  },
  "getSubSubCategory": {
    "name": "getSubSubCategory",
    "description": "Retrieves a third-level Category by tag, subtag and subsubtag.",
    "uri": "/categories/:tag/:subtag/:subsubtag",
    "params": {
      "tag": "string",
      "subtag": "string",
      "subsubtag": "string"
    },
    "defaults": null,
    "type": "Category",
    "visibility": "public",
    "http_method": "GET"
  },
  "findAllCountry": {
    "name": "findAllCountry",
    "description": "Finds all Country.",
    "uri": "/countries",
    "params": null,
    "defaults": null,
    "type": "Country",
    "visibility": "public",
    "http_method": "GET"
  },
  "getCountry": {
    "name": "getCountry",
    "description": "Retrieves a Country by id.",
    "uri": "/countries/:country_id",
    "params": {
      "country_id": "array(int)"
    },
    "defaults": null,
    "type": "Country",
    "visibility": "public",
    "http_method": "GET"
  },
  "findByIsoCode": {
    "name": "findByIsoCode",
    "description": "Get the country info for the given ISO code.",
    "uri": "/countries/iso/:iso_code",
    "params": {
      "limit": "int",
      "offset": "int",
      "page": "int",
      "iso_code": "string"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "Country",
    "visibility": "public",
    "http_method": "GET"
  },
  "findAllFeaturedTreasuries": {
    "name": "findAllFeaturedTreasuries",
    "description": "Finds all FeaturedTreasuries.",
    "uri": "/featured_treasuries",
    "params": {
      "limit": "int",
      "offset": "int",
      "page": "int",
      "region": "region"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null,
      "region": "__ALL_REGIONS__"
    },
    "type": "FeaturedTreasury",
    "visibility": "public",
    "http_method": "GET"
  },
  "getFeaturedTreasuryById": {
    "name": "getFeaturedTreasuryById",
    "description": "Finds FeaturedTreasury by numeric ID.",
    "uri": "/featured_treasuries/:featured_treasury_id",
    "params": {
      "featured_treasury_id": "int"
    },
    "defaults": null,
    "type": "FeaturedTreasury",
    "visibility": "public",
    "http_method": "GET"
  },
  "findAllListingsForFeaturedTreasuryId": {
    "name": "findAllListingsForFeaturedTreasuryId",
    "description": "Finds all listings for a certain FeaturedTreasury.",
    "uri": "/featured_treasuries/:featured_treasury_id/listings",
    "params": {
      "featured_treasury_id": "int"
    },
    "defaults": null,
    "type": "Listing",
    "visibility": "public",
    "http_method": "GET"
  },
  "findAllActiveListingsForFeaturedTreasuryId": {
    "name": "findAllActiveListingsForFeaturedTreasuryId",
    "description": "Finds all active listings for a certain FeaturedTreasury.",
    "uri": "/featured_treasuries/:featured_treasury_id/listings/active",
    "params": {
      "featured_treasury_id": "int"
    },
    "defaults": null,
    "type": "Listing",
    "visibility": "public",
    "http_method": "GET"
  },
  "findAllFeaturedListings": {
    "name": "findAllFeaturedListings",
    "description": "Finds all FeaturedTreasury listings.",
    "uri": "/featured_treasuries/listings",
    "params": {
      "limit": "int",
      "offset": "int",
      "page": "int",
      "region": "region"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null,
      "region": "__ALL_REGIONS__"
    },
    "type": "Listing",
    "visibility": "public",
    "http_method": "GET"
  },
  "findAllCurrentFeaturedListings": {
    "name": "findAllCurrentFeaturedListings",
    "description": "Finds FeaturedTreasury listings that are currently displayed on a regional homepage.",
    "uri": "/featured_treasuries/listings/homepage_current",
    "params": {
      "region": "region"
    },
    "defaults": {
      "region": "US"
    },
    "type": "Listing",
    "visibility": "public",
    "http_method": "GET"
  },
  "findAllFeaturedTreasuriesByOwner": {
    "name": "findAllFeaturedTreasuriesByOwner",
    "description": "Finds all FeaturedTreasury by numeric owner_id.",
    "uri": "/featured_treasuries/owner/:owner_id",
    "params": {
      "limit": "int",
      "offset": "int",
      "page": "int",
      "owner_id": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "FeaturedTreasury",
    "visibility": "public",
    "http_method": "GET"
  },
  "getGuest": {
    "name": "getGuest",
    "description": "Get a guest by ID.",
    "uri": "/guests/:guest_id",
    "params": {
      "guest_id": "guest_id"
    },
    "defaults": null,
    "type": "Guest",
    "visibility": "public",
    "http_method": "GET"
  },
  "findAllGuestCarts": {
    "name": "findAllGuestCarts",
    "description": "Get all guest's carts",
    "uri": "/guests/:guest_id/carts",
    "params": {
      "guest_id": "guest_id"
    },
    "defaults": null,
    "type": "GuestCart",
    "visibility": "public",
    "http_method": "GET"
  },
  "addToGuestCart": {
    "name": "addToGuestCart",
    "description": "Add a listing to guest's cart",
    "uri": "/guests/:guest_id/carts",
    "params": {
      "guest_id": "guest_id",
      "listing_id": "int",
      "quantity": "int",
      "selected_variations": "map(int, int)"
    },
    "defaults": {
      "quantity": 1,
      "selected_variations": null
    },
    "type": "GuestCart",
    "visibility": "public",
    "http_method": "POST"
  },
  "updateGuestCartListingQuantity": {
    "name": "updateGuestCartListingQuantity",
    "description": "Update a guest's cart listing purchase quantity",
    "uri": "/guests/:guest_id/carts",
    "params": {
      "guest_id": "guest_id",
      "listing_id": "int",
      "quantity": "int",
      "listing_customization_id": "int"
    },
    "defaults": {
      "listing_customization_id": 0
    },
    "type": "GuestCart",
    "visibility": "public",
    "http_method": "PUT"
  },
  "removeGuestCartListing": {
    "name": "removeGuestCartListing",
    "description": "Remove a listing from a guest's cart",
    "uri": "/guests/:guest_id/carts",
    "params": {
      "guest_id": "guest_id",
      "listing_id": "int",
      "listing_customization_id": "int"
    },
    "defaults": {
      "listing_customization_id": 0
    },
    "type": "GuestCart",
    "visibility": "public",
    "http_method": "DELETE"
  },
  "findGuestCart": {
    "name": "findGuestCart",
    "description": "Get a guest's cart",
    "uri": "/guests/:guest_id/carts/:cart_id",
    "params": {
      "guest_id": "guest_id",
      "cart_id": "cart_id"
    },
    "defaults": null,
    "type": "GuestCart",
    "visibility": "public",
    "http_method": "GET"
  },
  "updateGuestCart": {
    "name": "updateGuestCart",
    "description": "Update a guest's cart",
    "uri": "/guests/:guest_id/carts/:cart_id",
    "params": {
      "guest_id": "guest_id",
      "cart_id": "cart_id",
      "destination_country_id": "int",
      "message_to_seller": "string",
      "coupon_code": "string",
      "shipping_option_id": "string",
      "destination_zip": "string"
    },
    "defaults": {
      "destination_country_id": null,
      "message_to_seller": null,
      "coupon_code": null,
      "shipping_option_id": null,
      "destination_zip": null
    },
    "type": "GuestCart",
    "visibility": "public",
    "http_method": "PUT"
  },
  "deleteGuestCart": {
    "name": "deleteGuestCart",
    "description": "Delete a guest's cart",
    "uri": "/guests/:guest_id/carts/:cart_id",
    "params": {
      "guest_id": "guest_id",
      "cart_id": "cart_id"
    },
    "defaults": null,
    "type": "GuestCart",
    "visibility": "public",
    "http_method": "DELETE"
  },
  "claimGuest": {
    "name": "claimGuest",
    "description": "Claim this guest to the associated user. Merges the GuestCart's associated with this GuestId into the logged in User's Carts. Returns the number of listings merged in meta['listings_merged'].",
    "uri": "/guests/:guest_id/claim",
    "params": {
      "guest_id": "guest_id"
    },
    "defaults": null,
    "type": "Guest",
    "visibility": "private",
    "http_method": "POST"
  },
  "mergeGuest": {
    "name": "mergeGuest",
    "description": "Merge this guest to a different guest. Merges the GuestCart's associated with this GuestId into the target guest's cart. Returns the number of listings merged in meta['listings_merged'].",
    "uri": "/guests/:guest_id/merge",
    "params": {
      "guest_id": "guest_id",
      "target_guest_id": "guest_id"
    },
    "defaults": null,
    "type": "Guest",
    "visibility": "private",
    "http_method": "POST"
  },
  "generateGuest": {
    "name": "generateGuest",
    "description": "A helper method that generates a Guest ID to associate to this anonymous session. This method is not strictly necessary, as any sufficiently random guest ID that is 13 characters in length will suffice and automatically create a guest account on use if it does not yet exist.",
    "uri": "/guests/generator",
    "params": null,
    "defaults": null,
    "type": "Guest",
    "visibility": "public",
    "http_method": "GET"
  },
  "listImageTypes": {
    "name": "listImageTypes",
    "description": "Lists available image types along with their supported sizes.",
    "uri": "/image_types",
    "params": null,
    "defaults": null,
    "type": "ImageType",
    "visibility": "public",
    "http_method": "GET"
  },
  "createListing": {
    "name": "createListing",
    "description": "Creates a new Listing. NOTE: A shipping_template_id is required when creating a listing. <strong>NOTE: All listings created on www.etsy.com must be actual items for sale. Please see our <a href='/developers/documentation/getting_started/testing'>guidelines for testing</a> with live listings.</strong>",
    "uri": "/listings",
    "params": {
      "quantity": "int",
      "title": "string",
      "description": "text",
      "price": "float",
      "materials": "array(string)",
      "shipping_template_id": "int",
      "shop_section_id": "int",
      "image_ids": "array(int)",
      "is_customizable": "boolean",
      "non_taxable": "boolean",
      "image": "image",
      "state": "enum(active, draft)",
      "processing_min": "int",
      "processing_max": "int",
      "category_id": "int",
      "taxonomy_id": "int",
      "tags": "array(string)",
      "who_made": "enum(i_did, collective, someone_else)",
      "is_supply": "boolean",
      "when_made": "enum(made_to_order, 2010_2017, 2000_2009, 1998_1999, before_1998, 1990_1997, 1980s, 1970s, 1960s, 1950s, 1940s, 1930s, 1920s, 1910s, 1900s, 1800s, 1700s, before_1700)",
      "recipient": "enum(men, women, unisex_adults, teen_boys, teen_girls, teens, boys, girls, children, baby_boys, baby_girls, babies, birds, cats, dogs, pets, not_specified)",
      "occasion": "enum(anniversary, baptism, bar_or_bat_mitzvah, birthday, canada_day, chinese_new_year, cinco_de_mayo, confirmation, christmas, day_of_the_dead, easter, eid, engagement, fathers_day, get_well, graduation, halloween, hanukkah, housewarming, kwanzaa, prom, july_4th, mothers_day, new_baby, new_years, quinceanera, retirement, st_patricks_day, sweet_16, sympathy, thanksgiving, valentines, wedding)",
      "style": "array(string)"
    },
    "defaults": {
      "materials": null,
      "shop_section_id": null,
      "image_ids": null,
      "is_customizable": null,
      "non_taxable": null,
      "image": null,
      "state": "active",
      "shipping_template_id": null,
      "processing_min": null,
      "processing_max": null,
      "category_id": null,
      "taxonomy_id": null,
      "tags": null,
      "recipient": null,
      "occasion": null,
      "style": null
    },
    "type": "Listing",
    "visibility": "private",
    "http_method": "POST"
  },
  "getListing": {
    "name": "getListing",
    "description": "Retrieves a Listing by id.",
    "uri": "/listings/:listing_id",
    "params": {
      "listing_id": "array(int)"
    },
    "defaults": null,
    "type": "Listing",
    "visibility": "public",
    "http_method": "GET"
  },
  "updateListing": {
    "name": "updateListing",
    "description": "Updates a Listing",
    "uri": "/listings/:listing_id",
    "params": {
      "listing_id": "int",
      "quantity": "int",
      "title": "string",
      "description": "text",
      "price": "float",
      "wholesale_price": "float",
      "materials": "array(string)",
      "renew": "boolean",
      "shipping_template_id": "int",
      "shop_section_id": "int",
      "state": "enum(active, inactive, draft)",
      "image_ids": "array(int)",
      "is_customizable": "boolean",
      "item_weight": "float",
      "item_length": "float",
      "item_width": "float",
      "item_height": "float",
      "item_weight_unit": "string",
      "item_dimensions_unit": "string",
      "non_taxable": "boolean",
      "category_id": "int",
      "taxonomy_id": "int",
      "tags": "array(string)",
      "who_made": "enum(i_did, collective, someone_else)",
      "is_supply": "boolean",
      "when_made": "enum(made_to_order, 2010_2017, 2000_2009, 1998_1999, before_1998, 1990_1997, 1980s, 1970s, 1960s, 1950s, 1940s, 1930s, 1920s, 1910s, 1900s, 1800s, 1700s, before_1700)",
      "recipient": "enum(men, women, unisex_adults, teen_boys, teen_girls, teens, boys, girls, children, baby_boys, baby_girls, babies, birds, cats, dogs, pets, not_specified)",
      "occasion": "enum(anniversary, baptism, bar_or_bat_mitzvah, birthday, canada_day, chinese_new_year, cinco_de_mayo, confirmation, christmas, day_of_the_dead, easter, eid, engagement, fathers_day, get_well, graduation, halloween, hanukkah, housewarming, kwanzaa, prom, july_4th, mothers_day, new_baby, new_years, quinceanera, retirement, st_patricks_day, sweet_16, sympathy, thanksgiving, valentines, wedding)",
      "style": "array(string)",
      "processing_min": "int",
      "processing_max": "int",
      "featured_rank": "featured_rank"
    },
    "defaults": {
      "quantity": null,
      "title": null,
      "description": null,
      "price": null,
      "wholesale_price": null,
      "materials": null,
      "renew": null,
      "shipping_template_id": null,
      "shop_section_id": null,
      "state": "active",
      "image_ids": null,
      "is_customizable": null,
      "item_weight": null,
      "item_length": null,
      "item_width": null,
      "item_height": null,
      "item_weight_unit": null,
      "item_dimensions_unit": null,
      "non_taxable": null,
      "category_id": null,
      "taxonomy_id": null,
      "tags": null,
      "who_made": null,
      "is_supply": null,
      "when_made": null,
      "recipient": null,
      "occasion": null,
      "style": null,
      "processing_min": null,
      "processing_max": null,
      "featured_rank": null
    },
    "type": "Listing",
    "visibility": "private",
    "http_method": "PUT"
  },
  "deleteListing": {
    "name": "deleteListing",
    "description": "Deletes a Listing",
    "uri": "/listings/:listing_id",
    "params": {
      "listing_id": "int"
    },
    "defaults": null,
    "type": "Listing",
    "visibility": "private",
    "http_method": "DELETE"
  },
  "getAttributes": {
    "name": "getAttributes",
    "description": "Get all of the attributes for a listing [developer preview - may be unstable]",
    "uri": "/listings/:listing_id/attributes",
    "params": {
      "listing_id": "int"
    },
    "defaults": null,
    "type": "PropertyValue",
    "visibility": "public",
    "http_method": "GET"
  },
  "getAttribute": {
    "name": "getAttribute",
    "description": "Get an attribute for a listing [developer preview - may be unstable]",
    "uri": "/listings/:listing_id/attributes/:property_id",
    "params": {
      "listing_id": "int",
      "property_id": "int"
    },
    "defaults": null,
    "type": "PropertyValue",
    "visibility": "public",
    "http_method": "GET"
  },
  "updateAttribute": {
    "name": "updateAttribute",
    "description": "Update or populate an attribute for a listing [developer preview - may be unstable]",
    "uri": "/listings/:listing_id/attributes/:property_id",
    "params": {
      "listing_id": "int",
      "property_id": "int",
      "value_ids": "array(int)",
      "values": "array(string)",
      "scale_id": "int"
    },
    "defaults": {
      "value_ids": null,
      "values": null,
      "scale_id": null
    },
    "type": "PropertyValue",
    "visibility": "private",
    "http_method": "PUT"
  },
  "deleteAttribute": {
    "name": "deleteAttribute",
    "description": "Delete an attribute for a listing [developer preview - may be unstable]",
    "uri": "/listings/:listing_id/attributes/:property_id",
    "params": {
      "listing_id": "int",
      "property_id": "int"
    },
    "defaults": null,
    "type": "PropertyValue",
    "visibility": "private",
    "http_method": "DELETE"
  },
  "findAllListingFavoredBy": {
    "name": "findAllListingFavoredBy",
    "description": "Retrieves a set of FavoriteListing objects associated to a Listing.",
    "uri": "/listings/:listing_id/favored-by",
    "params": {
      "listing_id": "int",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "FavoriteListing",
    "visibility": "public",
    "http_method": "GET"
  },
  "findAllListingFiles": {
    "name": "findAllListingFiles",
    "description": "Finds all ListingFiles on a Listing",
    "uri": "/listings/:listing_id/files",
    "params": {
      "listing_id": "int"
    },
    "defaults": null,
    "type": "ListingFile",
    "visibility": "private",
    "http_method": "GET"
  },
  "uploadListingFile": {
    "name": "uploadListingFile",
    "description": "Upload a new listing file, or attach an existing file to this listing.  You must either provide the listing_file_id\nof an existing listing file, or the name and file data of a new file that you are uploading.  If you are attaching\na file to a listing that is currently not digital, the listing will be converted to a digital listing.  This will\ncause the listing to have free shipping and will remove any variations.",
    "uri": "/listings/:listing_id/files",
    "params": {
      "listing_id": "int",
      "listing_file_id": "int",
      "file": "imagefile",
      "name": "string",
      "rank": "int"
    },
    "defaults": {
      "listing_file_id": null,
      "file": null,
      "name": null,
      "rank": 1
    },
    "type": "ListingFile",
    "visibility": "private",
    "http_method": "POST"
  },
  "findListingFile": {
    "name": "findListingFile",
    "description": "Finds a ListingFile by ID",
    "uri": "/listings/:listing_id/files/:listing_file_id",
    "params": {
      "listing_id": "int",
      "listing_file_id": "int"
    },
    "defaults": null,
    "type": "ListingFile",
    "visibility": "private",
    "http_method": "GET"
  },
  "deleteListingFile": {
    "name": "deleteListingFile",
    "description": "Removes the listing file from this listing.  If this is the last file on a listing, the listing will no longer\nbe considered a digital listing.",
    "uri": "/listings/:listing_id/files/:listing_file_id",
    "params": {
      "listing_id": "int",
      "listing_file_id": "int"
    },
    "defaults": null,
    "type": "ListingFile",
    "visibility": "private",
    "http_method": "DELETE"
  },
  "findAllListingFundOnEtsyCampaign": {
    "name": "findAllListingFundOnEtsyCampaign",
    "description": "Retrieves a set of FundOnEtsyCampaign objects associated to a Listing.",
    "uri": "/listings/:listing_id/fundonetsycampaign",
    "params": {
      "listing_id": "int"
    },
    "defaults": null,
    "type": "FundOnEtsyCampaign",
    "visibility": "public",
    "http_method": "GET"
  },
  "findAllListingImages": {
    "name": "findAllListingImages",
    "description": "Retrieves a set of ListingImage objects associated to a Listing.",
    "uri": "/listings/:listing_id/images",
    "params": {
      "listing_id": "int"
    },
    "defaults": null,
    "type": "ListingImage",
    "visibility": "public",
    "http_method": "GET"
  },
  "uploadListingImage": {
    "name": "uploadListingImage",
    "description": "Upload a new listing image, or re-associate a previously deleted one. You may associate an image\n                                      to any listing within the same shop that the image's original listing belongs to.\n                                      You MUST pass either a listing_image_id OR an image to this method.\n                                      Passing a listing_image_id serves to re-associate an image that was previously deleted.\n                                      If you wish to re-associate an image, we strongly recommend using the listing_image_id\n                                      argument as opposed to re-uploading a new image each time, to save bandwidth for you as well as us.\n                                      Pass overwrite=1 to replace the existing image at a given rank.\n                                      When uploading a new listing image with a watermark, pass is_watermarked=1; existing listing images\n                                      will not be affected by this parameter.",
    "uri": "/listings/:listing_id/images",
    "params": {
      "listing_id": "int",
      "listing_image_id": "int",
      "image": "imagefile",
      "rank": "int",
      "overwrite": "boolean",
      "is_watermarked": "boolean"
    },
    "defaults": {
      "listing_image_id": null,
      "image": null,
      "rank": 1,
      "overwrite": 0,
      "is_watermarked": 0
    },
    "type": "ListingImage",
    "visibility": "private",
    "http_method": "POST"
  },
  "getImage_Listing": {
    "name": "getImage_Listing",
    "description": "Retrieves a Image_Listing by id.",
    "uri": "/listings/:listing_id/images/:listing_image_id",
    "params": {
      "listing_image_id": "array(int)",
      "listing_id": "int"
    },
    "defaults": null,
    "type": "ListingImage",
    "visibility": "public",
    "http_method": "GET"
  },
  "deleteListingImage": {
    "name": "deleteListingImage",
    "description": "Deletes a listing image. A copy of the file remains on our servers,\n                                       and so a deleted image may be re-associated with the listing without\n                                       re-uploading the original image; see uploadListingImage",
    "uri": "/listings/:listing_id/images/:listing_image_id",
    "params": {
      "listing_id": "int",
      "listing_image_id": "int"
    },
    "defaults": null,
    "type": "ListingImage",
    "visibility": "private",
    "http_method": "DELETE"
  },
  "getInventory": {
    "name": "getInventory",
    "description": "Get the inventory for a listing [developer preview - may be unstable]",
    "uri": "/listings/:listing_id/inventory",
    "params": {
      "listing_id": "int",
      "write_missing_inventory": "boolean"
    },
    "defaults": {
      "write_missing_inventory": false
    },
    "type": "ListingInventory",
    "visibility": "public",
    "http_method": "GET"
  },
  "updateInventory": {
    "name": "updateInventory",
    "description": "Update the inventory for a listing [developer preview - may be unstable]",
    "uri": "/listings/:listing_id/inventory",
    "params": {
      "listing_id": "int",
      "products": "stringJSON",
      "price_on_property": "array(int)",
      "quantity_on_property": "array(int)",
      "sku_on_property": "array(int)"
    },
    "defaults": {
      "price_on_property": null,
      "quantity_on_property": null,
      "sku_on_property": null
    },
    "type": "ListingInventory",
    "visibility": "private",
    "http_method": "PUT"
  },
  "getProduct": {
    "name": "getProduct",
    "description": "Get a specific offering for a listing [developer preview - may be unstable]",
    "uri": "/listings/:listing_id/products/:product_id",
    "params": {
      "listing_id": "int",
      "product_id": "int"
    },
    "defaults": null,
    "type": "ListingOffering",
    "visibility": "public",
    "http_method": "GET"
  },
  "getOffering": {
    "name": "getOffering",
    "description": "Get a specific offering for a listing [developer preview - may be unstable]",
    "uri": "/listings/:listing_id/products/:product_id/offerings/:offering_id",
    "params": {
      "listing_id": "int",
      "product_id": "int",
      "offering_id": "int"
    },
    "defaults": null,
    "type": "ListingOffering",
    "visibility": "public",
    "http_method": "GET"
  },
  "findAllListingShippingProfileEntries": {
    "name": "findAllListingShippingProfileEntries",
    "description": "Retrieves a set of ShippingProfileEntries objects associated to a Listing.",
    "uri": "/listings/:listing_id/shipping/info",
    "params": null,
    "defaults": null,
    "type": "ShippingInfo",
    "visibility": "public",
    "http_method": "GET"
  },
  "createShippingInfo": {
    "name": "createShippingInfo",
    "description": "Creates a new ShippingInfo.",
    "uri": "/listings/:listing_id/shipping/info",
    "params": {
      "destination_country_id": "int",
      "primary_cost": "float",
      "secondary_cost": "float",
      "region_id": "int",
      "listing_id": "int"
    },
    "defaults": {
      "destination_country_id": null,
      "region_id": null
    },
    "type": "ShippingInfo",
    "visibility": "private",
    "http_method": "POST"
  },
  "getListingShippingUpgrades": {
    "name": "getListingShippingUpgrades",
    "description": "Get the shipping upgrades available for a listing.",
    "uri": "/listings/:listing_id/shipping/upgrades",
    "params": {
      "listing_id": "int"
    },
    "defaults": null,
    "type": "ShippingUpgrade",
    "visibility": "private",
    "http_method": "GET"
  },
  "createListingShippingUpgrade": {
    "name": "createListingShippingUpgrade",
    "description": "Creates a new ShippingUpgrade for the listing. Will unlink the listing if linked to a ShippingTemplate.",
    "uri": "/listings/:listing_id/shipping/upgrades",
    "params": {
      "listing_id": "int",
      "type": "int",
      "value": "string",
      "price": "float",
      "secondary_price": "float"
    },
    "defaults": null,
    "type": "ShippingUpgrade",
    "visibility": "private",
    "http_method": "POST"
  },
  "updateListingShippingUpgrade": {
    "name": "updateListingShippingUpgrade",
    "description": "Updates a ShippingUpgrade on a listing. Will unlink the listing if linked to a ShippingTemplate.",
    "uri": "/listings/:listing_id/shipping/upgrades",
    "params": {
      "listing_id": "int",
      "value_id": "int",
      "type": "int",
      "price": "float",
      "secondary_price": "float"
    },
    "defaults": null,
    "type": "ShippingUpgrade",
    "visibility": "private",
    "http_method": "PUT"
  },
  "deleteListingShippingUpgrade": {
    "name": "deleteListingShippingUpgrade",
    "description": "Deletes the ShippingUpgrade from the listing. Will unlink the listing if linked to a ShippingTemplate.",
    "uri": "/listings/:listing_id/shipping/upgrades",
    "params": {
      "listing_id": "int",
      "value_id": "int",
      "type": "int"
    },
    "defaults": null,
    "type": "ShippingUpgrade",
    "visibility": "private",
    "http_method": "DELETE"
  },
  "findAllListingTransactions": {
    "name": "findAllListingTransactions",
    "description": "Retrieves a set of Transaction objects associated to a Listing.",
    "uri": "/listings/:listing_id/transactions",
    "params": {
      "listing_id": "int",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "Transaction",
    "visibility": "private",
    "http_method": "GET"
  },
  "getListingTranslation": {
    "name": "getListingTranslation",
    "description": "Retrieves a ListingTranslation by listing_id and language",
    "uri": "/listings/:listing_id/translations/:language",
    "params": {
      "listing_id": "int",
      "language": "language"
    },
    "defaults": null,
    "type": "ListingTranslation",
    "visibility": "public",
    "http_method": "GET"
  },
  "createListingTranslation": {
    "name": "createListingTranslation",
    "description": "Creates a ListingTranslation by listing_id and language",
    "uri": "/listings/:listing_id/translations/:language",
    "params": {
      "listing_id": "int",
      "language": "language",
      "title": "string",
      "description": "text",
      "tags": "array(string)"
    },
    "defaults": {
      "title": false,
      "description": false,
      "tags": false
    },
    "type": "ListingTranslation",
    "visibility": "private",
    "http_method": "POST"
  },
  "updateListingTranslation": {
    "name": "updateListingTranslation",
    "description": "Updates a ListingTranslation by listing_id and language",
    "uri": "/listings/:listing_id/translations/:language",
    "params": {
      "listing_id": "int",
      "language": "language",
      "title": "string",
      "description": "text",
      "tags": "array(string)"
    },
    "defaults": {
      "title": false,
      "description": false,
      "tags": false
    },
    "type": "ListingTranslation",
    "visibility": "private",
    "http_method": "PUT"
  },
  "deleteListingTranslation": {
    "name": "deleteListingTranslation",
    "description": "Deletes a ListingTranslation by listing_id and language",
    "uri": "/listings/:listing_id/translations/:language",
    "params": {
      "listing_id": "int",
      "language": "language"
    },
    "defaults": null,
    "type": "ListingTranslation",
    "visibility": "private",
    "http_method": "DELETE"
  },
  "getListingVariations": {
    "name": "getListingVariations",
    "description": "Get the listing variations available for a listing.",
    "uri": "/listings/:listing_id/variations",
    "params": {
      "listing_id": "int"
    },
    "defaults": null,
    "type": "Variations_Property",
    "visibility": "public",
    "http_method": "GET"
  },
  "createListingVariations": {
    "name": "createListingVariations",
    "description": "Update all of the listing variations available for a listing; optionally set custom property names and property qualifiers. Expects a JSON array with a collection of objects of the form: <code>[{\"property_id\":200, \"value\":\"Black\"}, {\"property_id\":200, \"value\":\"White\"}]</code>",
    "uri": "/listings/:listing_id/variations",
    "params": {
      "listing_id": "int",
      "variations": "array(listing_variation)",
      "custom_property_names": "map(int, string)",
      "recipient_id": "int",
      "sizing_scale": "int",
      "weight_scale": "int",
      "height_scale": "int",
      "length_scale": "int",
      "width_scale": "int",
      "diameter_scale": "int",
      "dimensions_scale": "int"
    },
    "defaults": {
      "custom_property_names": null,
      "recipient_id": null,
      "sizing_scale": null,
      "weight_scale": null,
      "height_scale": null,
      "length_scale": null,
      "width_scale": null,
      "diameter_scale": null,
      "dimensions_scale": null
    },
    "type": "Variations_Property",
    "visibility": "private",
    "http_method": "POST"
  },
  "updateListingVariations": {
    "name": "updateListingVariations",
    "description": "Update all of the listing variations available for a listing. Expects a JSON array with a collection of objects of the form: <code>[{\"property_id\":200, \"value\":\"Black\"}, {\"property_id\":200, \"value\":\"White\"}]</code>",
    "uri": "/listings/:listing_id/variations",
    "params": {
      "listing_id": "int",
      "variations": "array(listing_variation)",
      "custom_property_names": "map(int, string)",
      "recipient_id": "int",
      "sizing_scale": "int",
      "weight_scale": "int",
      "height_scale": "int",
      "length_scale": "int",
      "width_scale": "int",
      "diameter_scale": "int",
      "dimensions_scale": "int"
    },
    "defaults": {
      "custom_property_names": null,
      "recipient_id": null,
      "sizing_scale": null,
      "weight_scale": null,
      "height_scale": null,
      "length_scale": null,
      "width_scale": null,
      "diameter_scale": null,
      "dimensions_scale": null
    },
    "type": "Variations_Property",
    "visibility": "private",
    "http_method": "PUT"
  },
  "createListingVariation": {
    "name": "createListingVariation",
    "description": "Add a new listing variation for a listing.",
    "uri": "/listings/:listing_id/variations/:property_id",
    "params": {
      "listing_id": "int",
      "property_id": "int",
      "value": "string",
      "is_available": "boolean",
      "price": "float"
    },
    "defaults": {
      "is_available": true,
      "price": null
    },
    "type": "Variations_Property",
    "visibility": "private",
    "http_method": "POST"
  },
  "updateListingVariation": {
    "name": "updateListingVariation",
    "description": "Update a listing variation for a listing.",
    "uri": "/listings/:listing_id/variations/:property_id",
    "params": {
      "listing_id": "int",
      "property_id": "int",
      "value": "string",
      "is_available": "boolean",
      "price": "float"
    },
    "defaults": {
      "price": null
    },
    "type": "Variations_Property",
    "visibility": "private",
    "http_method": "PUT"
  },
  "deleteListingVariation": {
    "name": "deleteListingVariation",
    "description": "Remove a listing variation for a listing.",
    "uri": "/listings/:listing_id/variations/:property_id",
    "params": {
      "listing_id": "int",
      "property_id": "int",
      "value": "string"
    },
    "defaults": null,
    "type": "Variations_Property",
    "visibility": "private",
    "http_method": "DELETE"
  },
  "findAllListingActive": {
    "name": "findAllListingActive",
    "description": "Finds all active Listings. (Note: the sort_on and sort_order options only work when combined with one of the search options: keywords, color, tags, location, etc.)",
    "uri": "/listings/active",
    "params": {
      "limit": "int",
      "offset": "int",
      "page": "int",
      "keywords": "text",
      "sort_on": "enum(created, price, score)",
      "sort_order": "enum(up, down)",
      "min_price": "float",
      "max_price": "float",
      "color": "color_triplet",
      "color_accuracy": "color_wiggle",
      "tags": "array(string)",
      "category": "category",
      "location": "string",
      "lat": "latitude",
      "lon": "longitude",
      "region": "region",
      "geo_level": "enum(city, state, country)",
      "accepts_gift_cards": "boolean",
      "translate_keywords": "boolean"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null,
      "keywords": null,
      "sort_on": "created",
      "sort_order": "down",
      "min_price": null,
      "max_price": null,
      "color": null,
      "color_accuracy": 0,
      "tags": null,
      "category": null,
      "location": null,
      "lat": null,
      "lon": null,
      "region": null,
      "geo_level": "city",
      "accepts_gift_cards": "false",
      "translate_keywords": "false"
    },
    "type": "Listing",
    "visibility": "public",
    "http_method": "GET"
  },
  "getInterestingListings": {
    "name": "getInterestingListings",
    "description": "Collects the list of interesting listings",
    "uri": "/listings/interesting",
    "params": {
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "Listing",
    "visibility": "public",
    "http_method": "GET"
  },
  "getTrendingListings": {
    "name": "getTrendingListings",
    "description": "Collects the list of listings used to generate the trending listing page",
    "uri": "/listings/trending",
    "params": {
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "Listing",
    "visibility": "public",
    "http_method": "GET"
  },
  "pagesSignup": {
    "name": "pagesSignup",
    "description": "Sign up for Pages",
    "uri": "/pages-signup",
    "params": {
      "brand_name": "string",
      "brand_url": "string",
      "name": "string",
      "title": "string",
      "email": "string"
    },
    "defaults": null,
    "type": null,
    "visibility": "public",
    "http_method": "POST"
  },
  "findPage": {
    "name": "findPage",
    "description": "Find a single page.",
    "uri": "/pages/:page_id",
    "params": {
      "page_id": "int"
    },
    "defaults": null,
    "type": "Page",
    "visibility": "public",
    "http_method": "GET"
  },
  "updatePageData": {
    "name": "updatePageData",
    "description": "Update a Page's data.",
    "uri": "/pages/:page_id",
    "params": {
      "page_id": "int",
      "page_name": "string",
      "link": "string",
      "byline": "string",
      "avatar": "image"
    },
    "defaults": {
      "page_name": null,
      "link": null,
      "byline": null,
      "avatar": null
    },
    "type": "Array",
    "visibility": "public",
    "http_method": "POST"
  },
  "uploadAvatar": {
    "name": "uploadAvatar",
    "description": "Upload a new user avatar image",
    "uri": "/users/:user_id/avatar",
    "params": {
      "src": "string",
      "user_id": "user_id_or_name",
      "image": "image"
    },
    "defaults": {
      "src": null,
      "image": null
    },
    "type": "Avatar",
    "visibility": "private",
    "http_method": "POST"
  },
  "findAllPageCollections": {
    "name": "findAllPageCollections",
    "description": "See all of a page's public collections.",
    "uri": "/pages/:page_id/collections",
    "params": {
      "limit": "int",
      "offset": "int",
      "page": "int",
      "page_id": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "Collection",
    "visibility": "public",
    "http_method": "GET"
  },
  "createPageCollection": {
    "name": "createPageCollection",
    "description": "Create a page collection for the given page.",
    "uri": "/pages/:page_id/collections",
    "params": {
      "page_id": "int",
      "name": "string",
      "privacy_level": "string"
    },
    "defaults": {
      "privacy_level": "public"
    },
    "type": "Collection",
    "visibility": "private",
    "http_method": "POST"
  },
  "getPageCollection": {
    "name": "getPageCollection",
    "description": "Retrieve a single page collection.",
    "uri": "/pages/:page_id/collections/:collection_id",
    "params": {
      "page_id": "int",
      "collection_id": "int"
    },
    "defaults": null,
    "type": "Collection",
    "visibility": "public",
    "http_method": "GET"
  },
  "updatePageCollection": {
    "name": "updatePageCollection",
    "description": "Update a page collection.",
    "uri": "/pages/:page_id/collections/:collection_id",
    "params": {
      "page_id": "int",
      "collection_id": "int",
      "name": "string",
      "privacy_level": "string"
    },
    "defaults": {
      "name": null,
      "privacy_level": "public"
    },
    "type": "Collection",
    "visibility": "private",
    "http_method": "PUT"
  },
  "deletePageCollection": {
    "name": "deletePageCollection",
    "description": "Delete a page collection.",
    "uri": "/pages/:page_id/collections/:collection_id",
    "params": {
      "page_id": "int",
      "collection_id": "int"
    },
    "defaults": null,
    "type": "Collection",
    "visibility": "private",
    "http_method": "DELETE"
  },
  "getCollectionListings": {
    "name": "getCollectionListings",
    "description": "Retrieve the listings for a single page collection.",
    "uri": "/pages/:page_id/collections/:collection_id/listings",
    "params": {
      "limit": "int",
      "offset": "int",
      "page": "int",
      "page_id": "int",
      "collection_id": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "CollectionListing",
    "visibility": "public",
    "http_method": "GET"
  },
  "addListingToCollection": {
    "name": "addListingToCollection",
    "description": "Add a listing to a page collection",
    "uri": "/pages/:page_id/collections/:collection_id/listings/:listing_id",
    "params": {
      "page_id": "int",
      "collection_id": "int",
      "listing_id": "int"
    },
    "defaults": null,
    "type": "CollectionListing",
    "visibility": "private",
    "http_method": "POST"
  },
  "removeListingFromCollection": {
    "name": "removeListingFromCollection",
    "description": "Remove a listing from a collection",
    "uri": "/pages/:page_id/collections/:collection_id/listings/:listing_id",
    "params": {
      "page_id": "int",
      "collection_id": "int",
      "listing_id": "int"
    },
    "defaults": null,
    "type": "CollectionListing",
    "visibility": "private",
    "http_method": "DELETE"
  },
  "findPageCollectionsForListings": {
    "name": "findPageCollectionsForListings",
    "description": "Find the collection ids for the authorized page and listing ids",
    "uri": "/pages/:page_id/collections/listings_map",
    "params": {
      "page_id": "int",
      "listing_ids": "array(int)"
    },
    "defaults": null,
    "type": "array",
    "visibility": "private",
    "http_method": "GET"
  },
  "addCurator": {
    "name": "addCurator",
    "description": "Add a user as curator for a page.",
    "uri": "/pages/:page_id/curators/:curator_id",
    "params": {
      "page_id": "int",
      "curator_id": "int"
    },
    "defaults": null,
    "type": "Array",
    "visibility": "public",
    "http_method": "POST"
  },
  "removeCurator": {
    "name": "removeCurator",
    "description": "Remove a user from curating page.",
    "uri": "/pages/:page_id/curators/:curator_id",
    "params": {
      "page_id": "int",
      "curator_id": "int"
    },
    "defaults": null,
    "type": "Array",
    "visibility": "public",
    "http_method": "DELETE"
  },
  "curatorPeopleSearch": {
    "name": "curatorPeopleSearch",
    "description": "Search for people to add as curators.",
    "uri": "/pages/find-curators",
    "params": {
      "query": "string"
    },
    "defaults": null,
    "type": "Array",
    "visibility": "public",
    "http_method": "GET"
  },
  "findPayment": {
    "name": "findPayment",
    "description": "Get a Direct Checkout Payment",
    "uri": "/payments/:payment_id",
    "params": {
      "payment_id": "array(int)"
    },
    "defaults": null,
    "type": "Payment",
    "visibility": "private",
    "http_method": "GET"
  },
  "findPaymentAdjustments": {
    "name": "findPaymentAdjustments",
    "description": "Get a Payment Adjustments from a Payment Id",
    "uri": "/payments/:payment_id/adjustments",
    "params": {
      "payment_id": "int",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "PaymentAdjustment",
    "visibility": "private",
    "http_method": "GET"
  },
  "findPaymentAdjustment": {
    "name": "findPaymentAdjustment",
    "description": "Get a Direct Checkout Payment Adjustment",
    "uri": "/payments/:payment_id/adjustments/:payment_adjustment_id",
    "params": {
      "payment_id": "int",
      "payment_adjustment_id": "int"
    },
    "defaults": null,
    "type": "PaymentAdjustment",
    "visibility": "private",
    "http_method": "GET"
  },
  "findPaymentAdjustmentItem": {
    "name": "findPaymentAdjustmentItem",
    "description": "Get a Direct Checkout Payment Adjustment Item",
    "uri": "/payments/:payment_id/adjustments/:payment_adjustment_id/items/:payment_adjustment_item_id",
    "params": {
      "payment_id": "int",
      "payment_adjustment_id": "int",
      "payment_adjustment_item_id": "int"
    },
    "defaults": null,
    "type": "PaymentAdjustmentItem",
    "visibility": "private",
    "http_method": "GET"
  },
  "getPrivateBaseline": {
    "name": "getPrivateBaseline",
    "description": "Pings a private v2 uri to get a performance baseline",
    "uri": "/private-baseline",
    "params": null,
    "defaults": null,
    "type": null,
    "visibility": "public",
    "http_method": "GET"
  },
  "getPropertyOptionModifier": {
    "name": "getPropertyOptionModifier",
    "description": "Add a value for a given property.",
    "uri": "/property_options/modifiers",
    "params": {
      "property_id": "int",
      "category_id": "int",
      "recipient_id": "int",
      "sizing_scale": "int",
      "weight_scale": "int",
      "height_scale": "int",
      "length_scale": "int",
      "width_scale": "int",
      "diameter_scale": "int",
      "dimensions_scale": "int"
    },
    "defaults": {
      "category_id": null,
      "recipient_id": null,
      "sizing_scale": null,
      "weight_scale": null,
      "height_scale": null,
      "length_scale": null,
      "width_scale": null,
      "diameter_scale": null,
      "dimensions_scale": null
    },
    "type": "Variations_PropertySetOptionModifier",
    "visibility": "public",
    "http_method": "GET"
  },
  "findAllSuggestedPropertyOptions": {
    "name": "findAllSuggestedPropertyOptions",
    "description": "Finds all suggested property options for a given property.",
    "uri": "/property_options/suggested",
    "params": {
      "property_id": "int",
      "category_id": "int",
      "recipient_id": "int",
      "sizing_scale": "int",
      "weight_scale": "int",
      "height_scale": "int",
      "length_scale": "int",
      "width_scale": "int",
      "diameter_scale": "int",
      "dimensions_scale": "int"
    },
    "defaults": {
      "category_id": null,
      "recipient_id": null,
      "sizing_scale": null,
      "weight_scale": null,
      "height_scale": null,
      "length_scale": null,
      "width_scale": null,
      "diameter_scale": null,
      "dimensions_scale": null
    },
    "type": "Variations_PropertySetOption",
    "visibility": "public",
    "http_method": "GET"
  },
  "findPropertySet": {
    "name": "findPropertySet",
    "description": "Find the property set for the category id",
    "uri": "/property_sets",
    "params": {
      "category_id": "int",
      "taxonomy_id": "int",
      "recipient_id": "int"
    },
    "defaults": {
      "category_id": null,
      "taxonomy_id": null,
      "recipient_id": null
    },
    "type": "Variations_PropertySet",
    "visibility": "public",
    "http_method": "GET"
  },
  "getShop_Receipt2": {
    "name": "getShop_Receipt2",
    "description": "Retrieves a Shop_Receipt2 by id.",
    "uri": "/receipts/:receipt_id",
    "params": {
      "receipt_id": "array(int)"
    },
    "defaults": null,
    "type": "Receipt",
    "visibility": "private",
    "http_method": "GET"
  },
  "updateReceipt": {
    "name": "updateReceipt",
    "description": "Updates a Shop_Receipt2",
    "uri": "/receipts/:receipt_id",
    "params": {
      "receipt_id": "int",
      "was_paid": "boolean",
      "was_shipped": "boolean"
    },
    "defaults": {
      "was_paid": null,
      "was_shipped": null
    },
    "type": "Receipt",
    "visibility": "private",
    "http_method": "PUT"
  },
  "findAllReceiptListings": {
    "name": "findAllReceiptListings",
    "description": "Finds all listings in a receipt",
    "uri": "/receipts/:receipt_id/listings",
    "params": {
      "limit": "int",
      "offset": "int",
      "page": "int",
      "receipt_id": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "Listing",
    "visibility": "private",
    "http_method": "GET"
  },
  "findAllShop_Receipt2Transactions": {
    "name": "findAllShop_Receipt2Transactions",
    "description": "Retrieves a set of Transaction objects associated to a Shop_Receipt2.",
    "uri": "/receipts/:receipt_id/transactions",
    "params": {
      "receipt_id": "int",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "Transaction",
    "visibility": "private",
    "http_method": "GET"
  },
  "findAllRegion": {
    "name": "findAllRegion",
    "description": "Finds all Region.",
    "uri": "/regions",
    "params": null,
    "defaults": null,
    "type": "Region",
    "visibility": "public",
    "http_method": "GET"
  },
  "getRegion": {
    "name": "getRegion",
    "description": "Retrieves a Region by id.",
    "uri": "/regions/:region_id",
    "params": {
      "region_id": "array(int)"
    },
    "defaults": null,
    "type": "Region",
    "visibility": "public",
    "http_method": "GET"
  },
  "findEligibleRegions": {
    "name": "findEligibleRegions",
    "description": "",
    "uri": "/regions/eligible",
    "params": null,
    "defaults": null,
    "type": "Region",
    "visibility": "public",
    "http_method": "GET"
  },
  "findBrowseSegments": {
    "name": "findBrowseSegments",
    "description": "Find all Browse Segments",
    "uri": "/segments",
    "params": {
      "region": "string",
      "path": "string"
    },
    "defaults": {
      "region": "US",
      "path": ""
    },
    "type": "Segment",
    "visibility": "public",
    "http_method": "GET"
  },
  "findBrowseSegmentListings": {
    "name": "findBrowseSegmentListings",
    "description": "Find Listings for a Segment by Segment path. NOTE: Offset must be an integer multiple of limit.",
    "uri": "/segments/listings",
    "params": {
      "path": "string",
      "limit": "int",
      "offset": "int",
      "page": "int",
      "keywords": "text",
      "sort_on": "enum(created, price, score)",
      "sort_order": "enum(up, down)",
      "min_price": "float",
      "max_price": "float",
      "ship_to": "string",
      "location": "string",
      "lat": "latitude",
      "lon": "longitude",
      "geo_level": "enum(city, state, country)",
      "accepts_gift_cards": "boolean"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null,
      "keywords": null,
      "sort_on": "created",
      "sort_order": "down",
      "min_price": null,
      "max_price": null,
      "ship_to": null,
      "location": null,
      "lat": null,
      "lon": null,
      "geo_level": "city",
      "accepts_gift_cards": "false"
    },
    "type": "Listing",
    "visibility": "public",
    "http_method": "GET"
  },
  "findBrowseSegmentPosters": {
    "name": "findBrowseSegmentPosters",
    "description": "Find Browse SegmentPosters by Segment slug",
    "uri": "/segments/posters",
    "params": {
      "path": "string"
    },
    "defaults": {
      "path": ""
    },
    "type": "SegmentPoster",
    "visibility": "public",
    "http_method": "GET"
  },
  "getServerEpoch": {
    "name": "getServerEpoch",
    "description": "Get server time, in epoch seconds notation.",
    "uri": "/server/epoch",
    "params": null,
    "defaults": null,
    "type": "Int",
    "visibility": "public",
    "http_method": "GET"
  },
  "ping": {
    "name": "ping",
    "description": "Check that the server is alive.",
    "uri": "/server/ping",
    "params": null,
    "defaults": null,
    "type": "String",
    "visibility": "public",
    "http_method": "GET"
  },
  "getShippingCosts": {
    "name": "getShippingCosts",
    "description": "Returns postage costs for the shipping carrier based on the supplied package",
    "uri": "/shipping/:shipping_provider_id/postage-costs",
    "params": {
      "origin_postal_code": "string",
      "origin_country_id": "int",
      "origin_state": "string",
      "destination_postal_code": "string",
      "destination_country_id": "int",
      "destination_state": "string",
      "shipping_provider_id": "shipping_provider_id",
      "mail_class": "string",
      "ships_on_date": "int",
      "weight": "float",
      "weight_units": "string",
      "length": "float",
      "width": "float",
      "height": "float",
      "dimension_units": "string",
      "signature_confirmation": "boolean",
      "insurance_value": "int",
      "saturday_delivery": "boolean",
      "signature_confirmation_type": "string"
    },
    "defaults": {
      "origin_state": null,
      "destination_state": null,
      "ships_on_date": 0,
      "weight_units": "oz",
      "length": null,
      "width": null,
      "height": null,
      "dimension_units": "in",
      "signature_confirmation": null,
      "insurance_value": 0,
      "saturday_delivery": false,
      "signature_confirmation_type": null
    },
    "type": "Array",
    "visibility": "private",
    "http_method": "POST"
  },
  "getShippingInfo": {
    "name": "getShippingInfo",
    "description": "Retrieves a ShippingInfo by id.",
    "uri": "/shipping/info/:shipping_info_id",
    "params": {
      "shipping_info_id": "array(int)"
    },
    "defaults": null,
    "type": "ShippingInfo",
    "visibility": "private",
    "http_method": "GET"
  },
  "updateShippingInfo": {
    "name": "updateShippingInfo",
    "description": "Updates a ShippingInfo with the given id.",
    "uri": "/shipping/info/:shipping_info_id",
    "params": {
      "shipping_info_id": "int",
      "destination_country_id": "int",
      "primary_cost": "float",
      "secondary_cost": "float",
      "region_id": "int",
      "listing_id": "int"
    },
    "defaults": {
      "destination_country_id": null,
      "primary_cost": null,
      "secondary_cost": null,
      "region_id": null,
      "listing_id": null
    },
    "type": "ShippingInfo",
    "visibility": "private",
    "http_method": "PUT"
  },
  "deleteShippingInfo": {
    "name": "deleteShippingInfo",
    "description": "Deletes the ShippingInfo with the given id.",
    "uri": "/shipping/info/:shipping_info_id",
    "params": {
      "shipping_info_id": "int"
    },
    "defaults": null,
    "type": "ShippingInfo",
    "visibility": "private",
    "http_method": "DELETE"
  },
  "getPostageRates": {
    "name": "getPostageRates",
    "description": "Returns postage costs for all mail classes for a shipping carrier based on the supplied package",
    "uri": "/shipping/providers/:shipping_provider_id/mail-class-rates",
    "params": {
      "origin_postal_code": "string",
      "origin_country_id": "int",
      "destination_postal_code": "string",
      "destination_country_id": "int",
      "destination_state": "string",
      "shipping_provider_id": "int",
      "ships_on_date": "int",
      "package_type": "string",
      "weight": "float",
      "weight_units": "string",
      "length": "float",
      "width": "float",
      "height": "float",
      "dimension_units": "string"
    },
    "defaults": {
      "destination_postal_code": null,
      "destination_state": null,
      "ships_on_date": 0,
      "package_type": "parcel",
      "weight_units": "oz",
      "length": null,
      "width": null,
      "height": null,
      "dimension_units": "in"
    },
    "type": "Array",
    "visibility": "public",
    "http_method": "POST"
  },
  "createShippingTemplate": {
    "name": "createShippingTemplate",
    "description": "Creates a new ShippingTemplate",
    "uri": "/shipping/templates",
    "params": {
      "title": "string",
      "origin_country_id": "int",
      "destination_country_id": "int",
      "primary_cost": "float",
      "secondary_cost": "float",
      "destination_region_id": "int",
      "min_processing_days": "int",
      "max_processing_days": "int"
    },
    "defaults": {
      "destination_country_id": null,
      "destination_region_id": null,
      "min_processing_days": null,
      "max_processing_days": null
    },
    "type": "ShippingTemplate",
    "visibility": "private",
    "http_method": "POST"
  },
  "getShippingTemplate": {
    "name": "getShippingTemplate",
    "description": "Retrieves a ShippingTemplate by id.",
    "uri": "/shipping/templates/:shipping_template_id",
    "params": {
      "shipping_template_id": "array(int)"
    },
    "defaults": null,
    "type": "ShippingTemplate",
    "visibility": "private",
    "http_method": "GET"
  },
  "updateShippingTemplate": {
    "name": "updateShippingTemplate",
    "description": "Updates a ShippingTemplate",
    "uri": "/shipping/templates/:shipping_template_id",
    "params": {
      "shipping_template_id": "int",
      "title": "string",
      "origin_country_id": "int",
      "min_processing_days": "int",
      "max_processing_days": "int"
    },
    "defaults": {
      "title": null,
      "origin_country_id": null,
      "min_processing_days": null,
      "max_processing_days": null
    },
    "type": "ShippingTemplate",
    "visibility": "private",
    "http_method": "PUT"
  },
  "deleteShippingTemplate": {
    "name": "deleteShippingTemplate",
    "description": "Deletes the ShippingTemplate with the given id.",
    "uri": "/shipping/templates/:shipping_template_id",
    "params": {
      "shipping_template_id": "int"
    },
    "defaults": null,
    "type": "ShippingTemplate",
    "visibility": "private",
    "http_method": "DELETE"
  },
  "findAllShippingTemplateEntries": {
    "name": "findAllShippingTemplateEntries",
    "description": "Retrieves a set of ShippingTemplateEntry objects associated to a ShippingTemplate.",
    "uri": "/shipping/templates/:shipping_template_id/entries",
    "params": {
      "shipping_template_id": "int",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "ShippingTemplate",
    "visibility": "private",
    "http_method": "GET"
  },
  "findAllShippingTemplateUpgrades": {
    "name": "findAllShippingTemplateUpgrades",
    "description": "Retrieves a list of shipping upgrades for the parent ShippingTemplate",
    "uri": "/shipping/templates/:shipping_template_id/upgrades",
    "params": {
      "shipping_template_id": "int"
    },
    "defaults": null,
    "type": "ShippingUpgrade",
    "visibility": "private",
    "http_method": "GET"
  },
  "createShippingTemplateUpgrade": {
    "name": "createShippingTemplateUpgrade",
    "description": "Creates a new ShippingUpgrade for the parent ShippingTemplate. Updates any listings linked to the ShippingTemplate.",
    "uri": "/shipping/templates/:shipping_template_id/upgrades",
    "params": {
      "shipping_template_id": "int",
      "type": "int",
      "value": "string",
      "price": "float",
      "secondary_price": "float"
    },
    "defaults": null,
    "type": "ShippingUpgrade",
    "visibility": "private",
    "http_method": "POST"
  },
  "updateShippingTemplateUpgrade": {
    "name": "updateShippingTemplateUpgrade",
    "description": "Updates a ShippingUpgrade of the parent ShippingTemplate. Updates any listings linked to the ShippingTemplate.",
    "uri": "/shipping/templates/:shipping_template_id/upgrades",
    "params": {
      "shipping_template_id": "int",
      "value_id": "int",
      "type": "int",
      "price": "float",
      "secondary_price": "float"
    },
    "defaults": null,
    "type": "ShippingUpgrade",
    "visibility": "private",
    "http_method": "PUT"
  },
  "deleteShippingTemplateUpgrade": {
    "name": "deleteShippingTemplateUpgrade",
    "description": "Deletes the ShippingUpgrade from the parent ShippingTemplate. Updates any listings linked to the ShippingTemplate.",
    "uri": "/shipping/templates/:shipping_template_id/upgrades",
    "params": {
      "shipping_template_id": "int",
      "value_id": "int",
      "type": "int"
    },
    "defaults": null,
    "type": "ShippingUpgrade",
    "visibility": "private",
    "http_method": "DELETE"
  },
  "createShippingTemplateEntry": {
    "name": "createShippingTemplateEntry",
    "description": "Creates a new ShippingTemplateEntry",
    "uri": "/shipping/templates/entries",
    "params": {
      "shipping_template_id": "int",
      "destination_country_id": "int",
      "primary_cost": "float",
      "secondary_cost": "float",
      "destination_region_id": "int"
    },
    "defaults": {
      "destination_country_id": null,
      "destination_region_id": null
    },
    "type": "ShippingTemplateEntry",
    "visibility": "private",
    "http_method": "POST"
  },
  "getShippingTemplateEntry": {
    "name": "getShippingTemplateEntry",
    "description": "Retrieves a ShippingTemplateEntry by id.",
    "uri": "/shipping/templates/entries/:shipping_template_entry_id",
    "params": {
      "shipping_template_entry_id": "array(int)"
    },
    "defaults": null,
    "type": "ShippingTemplateEntry",
    "visibility": "private",
    "http_method": "GET"
  },
  "updateShippingTemplateEntry": {
    "name": "updateShippingTemplateEntry",
    "description": "Updates a ShippingTemplateEntry",
    "uri": "/shipping/templates/entries/:shipping_template_entry_id",
    "params": {
      "shipping_template_entry_id": "int",
      "destination_country_id": "int",
      "primary_cost": "float",
      "secondary_cost": "float"
    },
    "defaults": {
      "destination_country_id": null,
      "primary_cost": null,
      "secondary_cost": null
    },
    "type": "ShippingTemplateEntry",
    "visibility": "private",
    "http_method": "PUT"
  },
  "deleteShippingTemplateEntry": {
    "name": "deleteShippingTemplateEntry",
    "description": "Deletes the ShippingTemplateEntry",
    "uri": "/shipping/templates/entries/:shipping_template_entry_id",
    "params": {
      "shipping_template_entry_id": "int"
    },
    "defaults": null,
    "type": "ShippingTemplateEntry",
    "visibility": "private",
    "http_method": "DELETE"
  },
  "findAllShops": {
    "name": "findAllShops",
    "description": "Finds all Shops.  If there is a keywords parameter, finds shops with shop_name starting with keywords.",
    "uri": "/shops",
    "params": {
      "shop_name": "string",
      "limit": "int",
      "offset": "int",
      "page": "int",
      "lat": "latitude",
      "lon": "longitude",
      "distance_max": "float"
    },
    "defaults": {
      "shop_name": null,
      "limit": 25,
      "offset": 0,
      "page": null,
      "lat": null,
      "lon": null,
      "distance_max": 35
    },
    "type": "Shop",
    "visibility": "public",
    "http_method": "GET"
  },
  "getShop": {
    "name": "getShop",
    "description": "Retrieves a Shop by id.",
    "uri": "/shops/:shop_id",
    "params": {
      "shop_id": "array(shop_id_or_name)"
    },
    "defaults": null,
    "type": "Shop",
    "visibility": "public",
    "http_method": "GET"
  },
  "updateShop": {
    "name": "updateShop",
    "description": "Updates a Shop",
    "uri": "/shops/:shop_id",
    "params": {
      "shop_id": "shop_id_or_name",
      "title": "string",
      "announcement": "text",
      "sale_message": "text",
      "policy_welcome": "text",
      "policy_payment": "text",
      "policy_shipping": "text",
      "policy_refunds": "text",
      "policy_additional": "text",
      "policy_seller_info": "text",
      "digital_sale_message": "text"
    },
    "defaults": {
      "title": null,
      "announcement": null,
      "sale_message": null,
      "policy_welcome": null,
      "policy_payment": null,
      "policy_shipping": null,
      "policy_refunds": null,
      "policy_additional": null,
      "policy_seller_info": null,
      "digital_sale_message": null
    },
    "type": "Shop",
    "visibility": "private",
    "http_method": "PUT"
  },
  "getShopAbout": {
    "name": "getShopAbout",
    "description": "Retrieves a ShopAbout object associated to a Shop.",
    "uri": "/shops/:shop_id/about",
    "params": {
      "shop_id": "shop_id_or_name"
    },
    "defaults": null,
    "type": "ShopAbout",
    "visibility": "public",
    "http_method": "GET"
  },
  "uploadShopBanner": {
    "name": "uploadShopBanner",
    "description": "Upload a new shop banner image",
    "uri": "/shops/:shop_id/appearance/banner",
    "params": {
      "shop_id": "shop_id_or_name",
      "image": "imagefile"
    },
    "defaults": null,
    "type": "Shop",
    "visibility": "private",
    "http_method": "POST"
  },
  "deleteShopBanner": {
    "name": "deleteShopBanner",
    "description": "Deletes a shop banner image",
    "uri": "/shops/:shop_id/appearance/banner",
    "params": {
      "shop_id": "shop_id_or_name"
    },
    "defaults": null,
    "type": "Shop",
    "visibility": "private",
    "http_method": "DELETE"
  },
  "findAllShopCoupons": {
    "name": "findAllShopCoupons",
    "description": "Retrieves all Shop_Coupons by shop_id",
    "uri": "/shops/:shop_id/coupons",
    "params": {
      "shop_id": "shop_id_or_name"
    },
    "defaults": null,
    "type": "Coupon",
    "visibility": "private",
    "http_method": "GET"
  },
  "createCoupon": {
    "name": "createCoupon",
    "description": "Creates a new Coupon. May only have one of <code>free_shipping</code>, <code>pct_discount</code> or <code>fixed_discount</code>",
    "uri": "/shops/:shop_id/coupons",
    "params": {
      "shop_id": "shop_id_or_name",
      "coupon_code": "string",
      "pct_discount": "int",
      "seller_active": "boolean",
      "free_shipping": "boolean",
      "domestic_only": "boolean",
      "currency_code": "string",
      "fixed_discount": "string",
      "minimum_purchase_price": "string",
      "expiration_date": "int"
    },
    "defaults": {
      "pct_discount": null,
      "seller_active": "false",
      "free_shipping": "false",
      "domestic_only": "false",
      "currency_code": "USD",
      "fixed_discount": null,
      "minimum_purchase_price": null,
      "expiration_date": null
    },
    "type": "Coupon",
    "visibility": "private",
    "http_method": "POST"
  },
  "findCoupon": {
    "name": "findCoupon",
    "description": "Retrieves a Shop_Coupon by id and shop_id",
    "uri": "/shops/:shop_id/coupons/:coupon_id",
    "params": {
      "shop_id": "shop_id_or_name",
      "coupon_id": "int"
    },
    "defaults": null,
    "type": "Coupon",
    "visibility": "private",
    "http_method": "GET"
  },
  "updateCoupon": {
    "name": "updateCoupon",
    "description": "Updates a coupon",
    "uri": "/shops/:shop_id/coupons/:coupon_id",
    "params": {
      "shop_id": "shop_id_or_name",
      "coupon_id": "int",
      "seller_active": "boolean"
    },
    "defaults": {
      "seller_active": "false"
    },
    "type": "Coupon",
    "visibility": "private",
    "http_method": "PUT"
  },
  "deleteCoupon": {
    "name": "deleteCoupon",
    "description": "Deletes a coupon",
    "uri": "/shops/:shop_id/coupons/:coupon_id",
    "params": {
      "shop_id": "shop_id_or_name",
      "coupon_id": "int"
    },
    "defaults": null,
    "type": "Coupon",
    "visibility": "private",
    "http_method": "DELETE"
  },
  "findLedger": {
    "name": "findLedger",
    "description": "Get a Shop Payment Account Ledger",
    "uri": "/shops/:shop_id/ledger/",
    "params": {
      "shop_id": "shop_id_or_name"
    },
    "defaults": null,
    "type": "Ledger",
    "visibility": "private",
    "http_method": "GET"
  },
  "findLedgerEntries": {
    "name": "findLedgerEntries",
    "description": "Get a Shop Payment Account Ledger's Entries",
    "uri": "/shops/:shop_id/ledger/entries",
    "params": {
      "shop_id": "shop_id_or_name",
      "min_created": "epoch",
      "max_created": "epoch",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "min_created": null,
      "max_created": null,
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "LedgerEntry",
    "visibility": "private",
    "http_method": "GET"
  },
  "findLedgerEntry": {
    "name": "findLedgerEntry",
    "description": "Get a Shop Payment Account Ledger Entry",
    "uri": "/shops/:shop_id/ledger/entries/:ledger_entry_id",
    "params": {
      "shop_id": "shop_id_or_name",
      "ledger_entry_id": "int"
    },
    "defaults": null,
    "type": "LedgerEntry",
    "visibility": "private",
    "http_method": "GET"
  },
  "findPaymentAdjustmentForLedgerEntry": {
    "name": "findPaymentAdjustmentForLedgerEntry",
    "description": "Get a Payment Adjustment from a Ledger Entry ID, if applicable",
    "uri": "/shops/:shop_id/ledger/entries/:ledger_entry_id/adjustment",
    "params": {
      "shop_id": "shop_id_or_name",
      "ledger_entry_id": "array(int)"
    },
    "defaults": null,
    "type": "PaymentAdjustment",
    "visibility": "private",
    "http_method": "GET"
  },
  "findPaymentForLedgerEntry": {
    "name": "findPaymentForLedgerEntry",
    "description": "Get a Payment from a Ledger Entry ID, if applicable",
    "uri": "/shops/:shop_id/ledger/entries/:ledger_entry_id/payment",
    "params": {
      "shop_id": "shop_id_or_name",
      "ledger_entry_id": "array(int)"
    },
    "defaults": null,
    "type": "Payment",
    "visibility": "private",
    "http_method": "GET"
  },
  "findAllShopListingsActive": {
    "name": "findAllShopListingsActive",
    "description": "Finds all active Listings associated with a Shop.<br /><br />(<strong>NOTE:</strong> If calling on behalf of a shop owner in the context of listing management, be sure to include the parameter <strong>include_private = true</strong>.  This will return private listings that are not publicly visible in the shop, but which can be managed.  This is an experimental feature and may change.)",
    "uri": "/shops/:shop_id/listings/active",
    "params": {
      "limit": "int",
      "offset": "int",
      "page": "int",
      "shop_id": "shop_id_or_name",
      "keywords": "string",
      "sort_on": "enum(created, price, score)",
      "sort_order": "enum(up, down)",
      "min_price": "float",
      "max_price": "float",
      "color": "color_triplet",
      "color_accuracy": "color_wiggle",
      "tags": "array(string)",
      "category": "category",
      "translate_keywords": "boolean",
      "include_private": "boolean"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null,
      "keywords": null,
      "sort_on": "created",
      "sort_order": "down",
      "min_price": null,
      "max_price": null,
      "color": null,
      "color_accuracy": 0,
      "tags": null,
      "category": null,
      "translate_keywords": "false",
      "include_private": 0
    },
    "type": "Listing",
    "visibility": "public",
    "http_method": "GET"
  },
  "findAllShopListingsDraft": {
    "name": "findAllShopListingsDraft",
    "description": "Finds all of a Shop's draft listings",
    "uri": "/shops/:shop_id/listings/draft",
    "params": {
      "shop_id": "shop_id_or_name",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "Listing",
    "visibility": "private",
    "http_method": "GET"
  },
  "findAllShopListingsExpired": {
    "name": "findAllShopListingsExpired",
    "description": "Retrieves Listings associated to a Shop that are expired",
    "uri": "/shops/:shop_id/listings/expired",
    "params": {
      "shop_id": "shop_id_or_name",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "Listing",
    "visibility": "private",
    "http_method": "GET"
  },
  "getShopListingExpired": {
    "name": "getShopListingExpired",
    "description": "Retrieves a Listing associated to a Shop that is inactive",
    "uri": "/shops/:shop_id/listings/expired/:listing_id",
    "params": {
      "shop_id": "shop_id_or_name",
      "listing_id": "int"
    },
    "defaults": null,
    "type": "Listing",
    "visibility": "private",
    "http_method": "GET"
  },
  "findAllShopListingsFeatured": {
    "name": "findAllShopListingsFeatured",
    "description": "Retrieves Listings associated to a Shop that are featured",
    "uri": "/shops/:shop_id/listings/featured",
    "params": {
      "shop_id": "shop_id_or_name",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "Listing",
    "visibility": "public",
    "http_method": "GET"
  },
  "findAllShopListingsInactive": {
    "name": "findAllShopListingsInactive",
    "description": "Retrieves Listings associated to a Shop that are inactive",
    "uri": "/shops/:shop_id/listings/inactive",
    "params": {
      "shop_id": "shop_id_or_name",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "Listing",
    "visibility": "private",
    "http_method": "GET"
  },
  "getShopListingInactive": {
    "name": "getShopListingInactive",
    "description": "Retrieves a Listing associated to a Shop that is inactive",
    "uri": "/shops/:shop_id/listings/inactive/:listing_id",
    "params": {
      "shop_id": "shop_id_or_name",
      "listing_id": "int"
    },
    "defaults": null,
    "type": "Listing",
    "visibility": "private",
    "http_method": "GET"
  },
  "findShopPaymentTemplates": {
    "name": "findShopPaymentTemplates",
    "description": "Retrieves the PaymentTemplate associated with the Shop",
    "uri": "/shops/:shop_id/payment_templates",
    "params": {
      "shop_id": "shop_id_or_name"
    },
    "defaults": null,
    "type": "PaymentTemplate",
    "visibility": "public",
    "http_method": "GET"
  },
  "createShopPaymentTemplate": {
    "name": "createShopPaymentTemplate",
    "description": "Creates a new PaymentTemplate",
    "uri": "/shops/:shop_id/payment_templates",
    "params": {
      "shop_id": "shop_id_or_name",
      "allow_check": "boolean",
      "allow_mo": "boolean",
      "allow_other": "boolean",
      "allow_paypal": "boolean",
      "allow_cc": "boolean",
      "paypal_email": "string",
      "name": "string",
      "first_line": "string",
      "second_line": "string",
      "city": "string",
      "state": "string",
      "zip": "string",
      "country_id": "int"
    },
    "defaults": {
      "allow_check": null,
      "allow_mo": null,
      "allow_other": null,
      "allow_paypal": null,
      "allow_cc": null,
      "paypal_email": null,
      "name": null,
      "first_line": null,
      "second_line": null,
      "city": null,
      "state": null,
      "zip": null,
      "country_id": null
    },
    "type": "PaymentTemplate",
    "visibility": "private",
    "http_method": "POST"
  },
  "updateShopPaymentTemplate": {
    "name": "updateShopPaymentTemplate",
    "description": "Updates a PaymentTemplate",
    "uri": "/shops/:shop_id/payment_templates/:payment_template_id",
    "params": {
      "shop_id": "shop_id_or_name",
      "allow_check": "boolean",
      "allow_mo": "boolean",
      "allow_other": "boolean",
      "allow_paypal": "boolean",
      "allow_cc": "boolean",
      "paypal_email": "string",
      "name": "string",
      "first_line": "string",
      "second_line": "string",
      "city": "string",
      "state": "string",
      "zip": "string",
      "country_id": "int",
      "payment_template_id": "int"
    },
    "defaults": {
      "allow_check": null,
      "allow_mo": null,
      "allow_other": null,
      "allow_paypal": null,
      "allow_cc": null,
      "paypal_email": null,
      "name": null,
      "first_line": null,
      "second_line": null,
      "city": null,
      "state": null,
      "zip": null,
      "country_id": null
    },
    "type": "PaymentTemplate",
    "visibility": "private",
    "http_method": "PUT"
  },
  "findAllShopReceipts": {
    "name": "findAllShopReceipts",
    "description": "Retrieves a set of Receipt objects associated to a Shop.",
    "uri": "/shops/:shop_id/receipts",
    "params": {
      "shop_id": "shop_id_or_name",
      "min_created": "epoch",
      "max_created": "epoch",
      "min_last_modified": "int",
      "max_last_modified": "int",
      "limit": "int",
      "offset": "int",
      "page": "int",
      "was_paid": "boolean",
      "was_shipped": "boolean"
    },
    "defaults": {
      "min_created": null,
      "max_created": null,
      "min_last_modified": null,
      "max_last_modified": null,
      "limit": 25,
      "offset": 0,
      "page": null,
      "was_paid": null,
      "was_shipped": null
    },
    "type": "Receipt",
    "visibility": "private",
    "http_method": "GET"
  },
  "findShopPaymentByReceipt": {
    "name": "findShopPaymentByReceipt",
    "description": "Get a Payment by Shop Receipt ID",
    "uri": "/shops/:shop_id/receipts/:receipt_id/payments",
    "params": {
      "receipt_id": "int",
      "shop_id": "shop_id_or_name"
    },
    "defaults": null,
    "type": "Payment",
    "visibility": "private",
    "http_method": "GET"
  },
  "submitTracking": {
    "name": "submitTracking",
    "description": "Submits tracking information and sends a shipping notification email to the buyer. If <code>send_bcc</code> is <code>true</code>, the shipping notification will be sent to the seller as well. Refer to <a href=\"/developers/documentation/getting_started/seller_tools#section_tracking_codes\">additional documentation</a>.",
    "uri": "/shops/:shop_id/receipts/:receipt_id/tracking",
    "params": {
      "tracking_code": "string",
      "carrier_name": "string",
      "send_bcc": "boolean"
    },
    "defaults": {
      "send_bcc": false
    },
    "type": "Receipt",
    "visibility": "private",
    "http_method": "POST"
  },
  "findAllShopReceiptsByStatus": {
    "name": "findAllShopReceiptsByStatus",
    "description": "Retrieves a set of Receipt objects associated to a Shop based on the status.",
    "uri": "/shops/:shop_id/receipts/:status",
    "params": {
      "shop_id": "shop_id_or_name",
      "status": "enum(open, unshipped, unpaid, completed, processing, all)",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "Receipt",
    "visibility": "private",
    "http_method": "GET"
  },
  "findAllOpenLocalDeliveryReceipts": {
    "name": "findAllOpenLocalDeliveryReceipts",
    "description": "Retrieves a set of open Local Delivery Receipt objects associated to a Shop.",
    "uri": "/shops/:shop_id/receipts/local-delivery",
    "params": {
      "shop_id": "shop_id_or_name",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "Receipt",
    "visibility": "private",
    "http_method": "GET"
  },
  "searchAllShopReceipts": {
    "name": "searchAllShopReceipts",
    "description": "Searches the set of Receipt objects associated to a Shop by a query",
    "uri": "/shops/:shop_id/receipts/search",
    "params": {
      "shop_id": "shop_id_or_name",
      "search_query": "string",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "Receipt",
    "visibility": "private",
    "http_method": "GET"
  },
  "getShopReviews": {
    "name": "getShopReviews",
    "description": "Retrieves a list of reviews left for listings purchased from a shop",
    "uri": "/shops/:shop_id/reviews",
    "params": {
      "shop_id": "shop_id_or_name",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 30,
      "offset": 0,
      "page": null
    },
    "type": "ReceiptReviews",
    "visibility": "public",
    "http_method": "GET"
  },
  "findAllShopSections": {
    "name": "findAllShopSections",
    "description": "Retrieves a set of ShopSection objects associated to a Shop.",
    "uri": "/shops/:shop_id/sections",
    "params": {
      "shop_id": "shop_id_or_name"
    },
    "defaults": null,
    "type": "ShopSection",
    "visibility": "public",
    "http_method": "GET"
  },
  "createShopSection": {
    "name": "createShopSection",
    "description": "Creates a new ShopSection.",
    "uri": "/shops/:shop_id/sections",
    "params": {
      "shop_id": "shop_id_or_name",
      "title": "text",
      "user_id": "int"
    },
    "defaults": {
      "title": null,
      "user_id": null
    },
    "type": "ShopSection",
    "visibility": "private",
    "http_method": "POST"
  },
  "getShopSection": {
    "name": "getShopSection",
    "description": "Retrieves a ShopSection by id and shop_id",
    "uri": "/shops/:shop_id/sections/:shop_section_id",
    "params": {
      "shop_id": "shop_id_or_name",
      "shop_section_id": "array(int)"
    },
    "defaults": null,
    "type": "ShopSection",
    "visibility": "public",
    "http_method": "GET"
  },
  "updateShopSection": {
    "name": "updateShopSection",
    "description": "Updates a ShopSection with the given id.",
    "uri": "/shops/:shop_id/sections/:shop_section_id",
    "params": {
      "shop_id": "shop_id_or_name",
      "shop_section_id": "int",
      "title": "text",
      "user_id": "int"
    },
    "defaults": {
      "title": null,
      "user_id": null
    },
    "type": "ShopSection",
    "visibility": "private",
    "http_method": "PUT"
  },
  "deleteShopSection": {
    "name": "deleteShopSection",
    "description": "Deletes the ShopSection with the given id.",
    "uri": "/shops/:shop_id/sections/:shop_section_id",
    "params": {
      "shop_id": "shop_id_or_name",
      "shop_section_id": "int"
    },
    "defaults": null,
    "type": "ShopSection",
    "visibility": "private",
    "http_method": "DELETE"
  },
  "findAllShopSectionListings": {
    "name": "findAllShopSectionListings",
    "description": "Finds all listings within a shop section",
    "uri": "/shops/:shop_id/sections/:shop_section_id/listings",
    "params": {
      "limit": "int",
      "offset": "int",
      "page": "int",
      "shop_id": "shop_id_or_name",
      "shop_section_id": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "Listing",
    "visibility": "public",
    "http_method": "GET"
  },
  "findAllShopSectionListingsActive": {
    "name": "findAllShopSectionListingsActive",
    "description": "Finds all listings within a shop section",
    "uri": "/shops/:shop_id/sections/:shop_section_id/listings/active",
    "params": {
      "limit": "int",
      "offset": "int",
      "page": "int",
      "shop_id": "shop_id_or_name",
      "shop_section_id": "array(int)",
      "sort_on": "enum(created, price)",
      "sort_order": "enum(up, down)"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null,
      "sort_on": "created",
      "sort_order": "down"
    },
    "type": "Listing",
    "visibility": "public",
    "http_method": "GET"
  },
  "getShopSectionTranslation": {
    "name": "getShopSectionTranslation",
    "description": "Retrieves a ShopSectionTranslation by shop_id, shop_section_id and language",
    "uri": "/shops/:shop_id/sections/:shop_section_id/translations/:language",
    "params": {
      "shop_id": "shop_id_or_name",
      "shop_section_id": "int",
      "language": "language"
    },
    "defaults": null,
    "type": "ShopSectionTranslation",
    "visibility": "public",
    "http_method": "GET"
  },
  "createShopSectionTranslation": {
    "name": "createShopSectionTranslation",
    "description": "Creates a ShopSectionTranslation by shop_id, shop_section_id and language",
    "uri": "/shops/:shop_id/sections/:shop_section_id/translations/:language",
    "params": {
      "shop_id": "shop_id_or_name",
      "shop_section_id": "int",
      "language": "language",
      "title": "string"
    },
    "defaults": {
      "title": false
    },
    "type": "ShopSectionTranslation",
    "visibility": "private",
    "http_method": "POST"
  },
  "updateShopSectionTranslation": {
    "name": "updateShopSectionTranslation",
    "description": "Updates a ShopSectionTranslation by shop_id, shop_section_id and language",
    "uri": "/shops/:shop_id/sections/:shop_section_id/translations/:language",
    "params": {
      "shop_id": "shop_id_or_name",
      "shop_section_id": "int",
      "language": "language",
      "title": "string"
    },
    "defaults": {
      "title": false
    },
    "type": "ShopSectionTranslation",
    "visibility": "private",
    "http_method": "PUT"
  },
  "deleteShopSectionTranslation": {
    "name": "deleteShopSectionTranslation",
    "description": "Deletes a ShopSectionTranslation by shop_id, shop_section_id and language",
    "uri": "/shops/:shop_id/sections/:shop_section_id/translations/:language",
    "params": {
      "shop_id": "shop_id_or_name",
      "shop_section_id": "int",
      "language": "language"
    },
    "defaults": null,
    "type": "ShopSectionTranslation",
    "visibility": "private",
    "http_method": "DELETE"
  },
  "findAllShopTransactions": {
    "name": "findAllShopTransactions",
    "description": "Retrieves a set of Transaction objects associated to a Shop.",
    "uri": "/shops/:shop_id/transactions",
    "params": {
      "shop_id": "shop_id_or_name",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "Transaction",
    "visibility": "private",
    "http_method": "GET"
  },
  "getShopTranslation": {
    "name": "getShopTranslation",
    "description": "Retrieves a ShopTranslation by shop_id and language",
    "uri": "/shops/:shop_id/translations/:language",
    "params": {
      "shop_id": "shop_id_or_name",
      "language": "language"
    },
    "defaults": null,
    "type": "ShopTranslation",
    "visibility": "public",
    "http_method": "GET"
  },
  "createShopTranslation": {
    "name": "createShopTranslation",
    "description": "Creates a ShopTranslation by shop_id and language",
    "uri": "/shops/:shop_id/translations/:language",
    "params": {
      "shop_id": "shop_id_or_name",
      "language": "language",
      "title": "string",
      "sale_message": "string",
      "announcement": "string",
      "policy_welcome": "string",
      "policy_payment": "string",
      "policy_shipping": "string",
      "policy_refunds": "string",
      "policy_additional": "string",
      "policy_seller_info": "string",
      "vacation_autoreply": "string",
      "vacation_message": "string"
    },
    "defaults": {
      "title": false,
      "sale_message": false,
      "announcement": false,
      "policy_welcome": false,
      "policy_payment": false,
      "policy_shipping": false,
      "policy_refunds": false,
      "policy_additional": false,
      "policy_seller_info": false,
      "vacation_autoreply": false,
      "vacation_message": false
    },
    "type": "ShopTranslation",
    "visibility": "private",
    "http_method": "POST"
  },
  "updateShopTranslation": {
    "name": "updateShopTranslation",
    "description": "Updates a ShopTranslation by shop_id and language",
    "uri": "/shops/:shop_id/translations/:language",
    "params": {
      "shop_id": "shop_id_or_name",
      "language": "language",
      "title": "string",
      "sale_message": "string",
      "announcement": "string",
      "policy_welcome": "string",
      "policy_payment": "string",
      "policy_shipping": "string",
      "policy_refunds": "string",
      "policy_additional": "string",
      "policy_seller_info": "string",
      "vacation_autoreply": "string",
      "vacation_message": "string"
    },
    "defaults": {
      "title": false,
      "sale_message": false,
      "announcement": false,
      "policy_welcome": false,
      "policy_payment": false,
      "policy_shipping": false,
      "policy_refunds": false,
      "policy_additional": false,
      "policy_seller_info": false,
      "vacation_autoreply": false,
      "vacation_message": false
    },
    "type": "ShopTranslation",
    "visibility": "private",
    "http_method": "PUT"
  },
  "deleteShopTranslation": {
    "name": "deleteShopTranslation",
    "description": "Deletes a ShopTranslation by shop_id and language",
    "uri": "/shops/:shop_id/translations/:language",
    "params": {
      "shop_id": "shop_id_or_name",
      "language": "language"
    },
    "defaults": null,
    "type": "ShopTranslation",
    "visibility": "private",
    "http_method": "DELETE"
  },
  "getListingShop": {
    "name": "getListingShop",
    "description": "Retrieves a shop by a listing id.",
    "uri": "/shops/listing/:listing_id",
    "params": {
      "listing_id": "int"
    },
    "defaults": null,
    "type": "Shop",
    "visibility": "public",
    "http_method": "GET"
  },
  "getBuyerTaxonomy": {
    "name": "getBuyerTaxonomy",
    "description": "Retrieve the entire taxonomy as seen by buyers in search.",
    "uri": "/taxonomy/buyer/get",
    "params": null,
    "defaults": null,
    "type": "Taxonomy",
    "visibility": "public",
    "http_method": "GET"
  },
  "findAllTopCategory": {
    "name": "findAllTopCategory",
    "description": "Retrieves all top-level Categories.",
    "uri": "/taxonomy/categories",
    "params": null,
    "defaults": null,
    "type": "Category",
    "visibility": "public",
    "http_method": "GET"
  },
  "findAllTopCategoryChildren": {
    "name": "findAllTopCategoryChildren",
    "description": "Retrieves children of a top-level Category by tag.",
    "uri": "/taxonomy/categories/:tag",
    "params": {
      "tag": "string"
    },
    "defaults": null,
    "type": "Category",
    "visibility": "public",
    "http_method": "GET"
  },
  "findAllSubCategoryChildren": {
    "name": "findAllSubCategoryChildren",
    "description": "Retrieves children of a second-level Category by tag and subtag.",
    "uri": "/taxonomy/categories/:tag/:subtag",
    "params": {
      "tag": "string",
      "subtag": "string"
    },
    "defaults": null,
    "type": "Category",
    "visibility": "public",
    "http_method": "GET"
  },
  "getTaxonomyNodeProperties": {
    "name": "getTaxonomyNodeProperties",
    "description": "Get the possible properties of a taxonomy node [developer preview - may be unstable]",
    "uri": "/taxonomy/seller/:taxonomy_id/properties",
    "params": {
      "taxonomy_id": "int"
    },
    "defaults": null,
    "type": "TaxonomyNodeProperty",
    "visibility": "public",
    "http_method": "GET"
  },
  "getSellerTaxonomy": {
    "name": "getSellerTaxonomy",
    "description": "Retrieve the entire taxonomy as used by sellers in the listing process.",
    "uri": "/taxonomy/seller/get",
    "params": null,
    "defaults": null,
    "type": "Taxonomy",
    "visibility": "public",
    "http_method": "GET"
  },
  "getSellerTaxonomyVersion": {
    "name": "getSellerTaxonomyVersion",
    "description": "Get the current version of the seller taxonomy",
    "uri": "/taxonomy/seller/version",
    "params": null,
    "defaults": null,
    "type": "Taxonomy",
    "visibility": "public",
    "http_method": "GET"
  },
  "findSuggestedStyles": {
    "name": "findSuggestedStyles",
    "description": "Retrieve all suggested styles.",
    "uri": "/taxonomy/styles",
    "params": null,
    "defaults": null,
    "type": "Style",
    "visibility": "public",
    "http_method": "GET"
  },
  "findAllTeams": {
    "name": "findAllTeams",
    "description": "Returns all Teams",
    "uri": "/teams",
    "params": {
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "Team",
    "visibility": "public",
    "http_method": "GET"
  },
  "findAllUsersForTeam": {
    "name": "findAllUsersForTeam",
    "description": "Returns a list of users for a specific team",
    "uri": "/teams/:team_id/users/",
    "params": {
      "team_id": "int",
      "status": "enum(active, invited, pending)",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "status": "active",
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "User",
    "visibility": "public",
    "http_method": "GET"
  },
  "findTeams": {
    "name": "findTeams",
    "description": "Returns specified team by ID or team name",
    "uri": "/teams/:team_ids/",
    "params": {
      "team_ids": "array(team_id_or_name)"
    },
    "defaults": null,
    "type": "Team",
    "visibility": "public",
    "http_method": "GET"
  },
  "getShop_Transaction": {
    "name": "getShop_Transaction",
    "description": "Retrieves a Shop_Transaction by id.",
    "uri": "/transactions/:transaction_id",
    "params": {
      "transaction_id": "array(int)"
    },
    "defaults": null,
    "type": "Transaction",
    "visibility": "private",
    "http_method": "GET"
  },
  "findAllTreasuries": {
    "name": "findAllTreasuries",
    "description": "Search Treasuries or else List all Treasuries",
    "uri": "/treasuries",
    "params": {
      "keywords": "treasury_search_string",
      "sort_on": "enum(hotness, created)",
      "sort_order": "enum(up, down)",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "keywords": null,
      "sort_on": "hotness",
      "sort_order": "down",
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "Treasury",
    "visibility": "public",
    "http_method": "GET"
  },
  "getTreasury": {
    "name": "getTreasury",
    "description": "Get a Treasury",
    "uri": "/treasuries/:treasury_key",
    "params": {
      "treasury_key": "treasury_id"
    },
    "defaults": null,
    "type": "Treasury",
    "visibility": "public",
    "http_method": "GET"
  },
  "deleteTreasury": {
    "name": "deleteTreasury",
    "description": "Delete a Treasury",
    "uri": "/treasuries/:treasury_key",
    "params": null,
    "defaults": null,
    "type": "Treasury",
    "visibility": "private",
    "http_method": "DELETE"
  },
  "findTreasuryComments": {
    "name": "findTreasuryComments",
    "description": "Get a Treasury's Comments",
    "uri": "/treasuries/:treasury_key/comments",
    "params": {
      "treasury_key": "treasury_id",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "ForumPost",
    "visibility": "public",
    "http_method": "GET"
  },
  "postTreasuryComment": {
    "name": "postTreasuryComment",
    "description": "Leave a comment on a Treasury List",
    "uri": "/treasuries/:treasury_key/comments",
    "params": {
      "message": "forum_post"
    },
    "defaults": null,
    "type": "ForumPost",
    "visibility": "private",
    "http_method": "POST"
  },
  "deleteTreasuryComment": {
    "name": "deleteTreasuryComment",
    "description": "Delete a given comment on a Treasury List",
    "uri": "/treasuries/:treasury_key/comments/:comment_id",
    "params": null,
    "defaults": null,
    "type": "ForumPost",
    "visibility": "private",
    "http_method": "DELETE"
  },
  "addTreasuryListing": {
    "name": "addTreasuryListing",
    "description": "Add listing to a Treasury",
    "uri": "/treasuries/:treasury_key/listings",
    "params": {
      "treasury_key": "treasury_id",
      "listing_id": "int"
    },
    "defaults": null,
    "type": "TreasuryListing",
    "visibility": "private",
    "http_method": "POST"
  },
  "removeTreasuryListing": {
    "name": "removeTreasuryListing",
    "description": "Remove listing from a Treasury",
    "uri": "/treasuries/:treasury_key/listings/:listing_id",
    "params": {
      "treasury_key": "treasury_id",
      "listing_id": "int"
    },
    "defaults": null,
    "type": "TreasuryListing",
    "visibility": "private",
    "http_method": "DELETE"
  },
  "describeOccasionEnum": {
    "name": "describeOccasionEnum",
    "description": "Describes the legal values for Listing.occasion.",
    "uri": "/types/enum/occasion",
    "params": null,
    "defaults": null,
    "type": "DataType",
    "visibility": "public",
    "http_method": "GET"
  },
  "describeRecipientEnum": {
    "name": "describeRecipientEnum",
    "description": "Describes the legal values for Listing.recipient.",
    "uri": "/types/enum/recipient",
    "params": null,
    "defaults": null,
    "type": "DataType",
    "visibility": "public",
    "http_method": "GET"
  },
  "describeWhenMadeEnum": {
    "name": "describeWhenMadeEnum",
    "description": "Describes the legal values for Listing.when_made.",
    "uri": "/types/enum/when_made",
    "params": {
      "include_formatted": "boolean"
    },
    "defaults": {
      "include_formatted": null
    },
    "type": "DataType",
    "visibility": "public",
    "http_method": "GET"
  },
  "describeWhoMadeEnum": {
    "name": "describeWhoMadeEnum",
    "description": "Describes the legal values for Listing.who_made.",
    "uri": "/types/enum/who_made",
    "params": null,
    "defaults": null,
    "type": "DataType",
    "visibility": "public",
    "http_method": "GET"
  },
  "findAllUsers": {
    "name": "findAllUsers",
    "description": "Finds all Users whose name or username match the keywords parameter.",
    "uri": "/users",
    "params": {
      "keywords": "string",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "keywords": null,
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "User",
    "visibility": "public",
    "http_method": "GET"
  },
  "getUser": {
    "name": "getUser",
    "description": "Retrieves a User by id.",
    "uri": "/users/:user_id",
    "params": {
      "user_id": "array(user_id_or_name)"
    },
    "defaults": null,
    "type": "User",
    "visibility": "public",
    "http_method": "GET"
  },
  "findAllUserAddresses": {
    "name": "findAllUserAddresses",
    "description": "Retrieves a set of UserAddress objects associated to a User.",
    "uri": "/users/:user_id/addresses",
    "params": {
      "user_id": "user_id_or_name",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "UserAddress",
    "visibility": "private",
    "http_method": "GET"
  },
  "createUserAddress": {
    "name": "createUserAddress",
    "description": "Creates a new UserAddress. Note: state is required when the country is US, Canada, or Australia. See section above about valid codes.",
    "uri": "/users/:user_id/addresses/",
    "params": {
      "user_id": "user_id_or_name",
      "name": "string",
      "first_line": "string",
      "second_line": "string",
      "city": "string",
      "state": "string",
      "zip": "string",
      "country_id": "int"
    },
    "defaults": {
      "second_line": null,
      "state": null
    },
    "type": "UserAddress",
    "visibility": "private",
    "http_method": "POST"
  },
  "getUserAddress": {
    "name": "getUserAddress",
    "description": "Retrieves a UserAddress by id.",
    "uri": "/users/:user_id/addresses/:user_address_id",
    "params": {
      "user_address_id": "array(int)"
    },
    "defaults": null,
    "type": "UserAddress",
    "visibility": "private",
    "http_method": "GET"
  },
  "deleteUserAddress": {
    "name": "deleteUserAddress",
    "description": "Deletes the UserAddress with the given id.",
    "uri": "/users/:user_id/addresses/:user_address_id",
    "params": {
      "user_address_id": "int"
    },
    "defaults": null,
    "type": "UserAddress",
    "visibility": "private",
    "http_method": "DELETE"
  },
  "getAvatarImgSrc": {
    "name": "getAvatarImgSrc",
    "description": "Get avatar image source",
    "uri": "/users/:user_id/avatar/src",
    "params": {
      "user_id": "user_id_or_name"
    },
    "defaults": null,
    "type": "Avatar",
    "visibility": "public",
    "http_method": "GET"
  },
  "getUserBillingOverview": {
    "name": "getUserBillingOverview",
    "description": "Retrieves the user's current balance.",
    "uri": "/users/:user_id/billing/overview",
    "params": {
      "user_id": "user_id_or_name"
    },
    "defaults": null,
    "type": "BillingOverview",
    "visibility": "private",
    "http_method": "GET"
  },
  "getAllUserCarts": {
    "name": "getAllUserCarts",
    "description": "Get a user's Carts",
    "uri": "/users/:user_id/carts",
    "params": {
      "user_id": "user_id_or_name",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 100,
      "offset": 0,
      "page": null
    },
    "type": "Cart",
    "visibility": "private",
    "http_method": "GET"
  },
  "addToCart": {
    "name": "addToCart",
    "description": "Add a listing to a cart",
    "uri": "/users/:user_id/carts",
    "params": {
      "user_id": "user_id_or_name",
      "listing_id": "int",
      "quantity": "int",
      "selected_variations": "map(int, int)"
    },
    "defaults": {
      "quantity": 1,
      "selected_variations": null
    },
    "type": "Cart",
    "visibility": "private",
    "http_method": "POST"
  },
  "updateCartListingQuantity": {
    "name": "updateCartListingQuantity",
    "description": "Update a cart listing purchase quantity",
    "uri": "/users/:user_id/carts",
    "params": {
      "user_id": "user_id_or_name",
      "listing_id": "int",
      "quantity": "int",
      "listing_customization_id": "int"
    },
    "defaults": {
      "listing_customization_id": 0
    },
    "type": "Cart",
    "visibility": "private",
    "http_method": "PUT"
  },
  "removeCartListing": {
    "name": "removeCartListing",
    "description": "Remove a listing from a cart",
    "uri": "/users/:user_id/carts",
    "params": {
      "user_id": "user_id_or_name",
      "listing_id": "int",
      "listing_customization_id": "int"
    },
    "defaults": {
      "listing_customization_id": 0
    },
    "type": "Cart",
    "visibility": "private",
    "http_method": "DELETE"
  },
  "getUserCart": {
    "name": "getUserCart",
    "description": "Get a cart",
    "uri": "/users/:user_id/carts/:cart_id",
    "params": {
      "user_id": "user_id_or_name",
      "cart_id": "cart_id"
    },
    "defaults": null,
    "type": "Cart",
    "visibility": "private",
    "http_method": "GET"
  },
  "updateCart": {
    "name": "updateCart",
    "description": "Update a cart",
    "uri": "/users/:user_id/carts/:cart_id",
    "params": {
      "user_id": "user_id_or_name",
      "cart_id": "cart_id",
      "destination_country_id": "int",
      "message_to_seller": "text",
      "coupon_code": "string",
      "shipping_option_id": "string",
      "destination_zip": "string"
    },
    "defaults": {
      "destination_country_id": null,
      "message_to_seller": null,
      "coupon_code": null,
      "shipping_option_id": null,
      "destination_zip": null
    },
    "type": "Cart",
    "visibility": "private",
    "http_method": "PUT"
  },
  "deleteCart": {
    "name": "deleteCart",
    "description": "Delete a cart",
    "uri": "/users/:user_id/carts/:cart_id",
    "params": {
      "user_id": "user_id_or_name",
      "cart_id": "cart_id"
    },
    "defaults": null,
    "type": "Cart",
    "visibility": "private",
    "http_method": "DELETE"
  },
  "addAndSelectShippingForApplePay": {
    "name": "addAndSelectShippingForApplePay",
    "description": "Saves and selects a shipping address for apple pay",
    "uri": "/users/:user_id/carts/:cart_id/add_and_select_shipping_for_apple",
    "params": {
      "user_id": "user_id_or_name",
      "cart_id": "cart_id",
      "second_line": "string",
      "city": "string",
      "state": "string",
      "zip": "string",
      "country_id": "int"
    },
    "defaults": {
      "second_line": null,
      "state": null
    },
    "type": "Cart",
    "visibility": "private",
    "http_method": "POST"
  },
  "findAllCartListings": {
    "name": "findAllCartListings",
    "description": "Finds all listings in a given Cart",
    "uri": "/users/:user_id/carts/:cart_id/listings",
    "params": {
      "user_id": "user_id_or_name",
      "cart_id": "cart_id"
    },
    "defaults": null,
    "type": "Listing",
    "visibility": "private",
    "http_method": "GET"
  },
  "saveListingForLater": {
    "name": "saveListingForLater",
    "description": "Move a listing to Saved for Later",
    "uri": "/users/:user_id/carts/save",
    "params": {
      "user_id": "user_id_or_name",
      "cart_id": "int",
      "listing_id": "int",
      "listing_inventory_id": "int",
      "listing_customization_id": "int"
    },
    "defaults": {
      "listing_inventory_id": 0,
      "listing_customization_id": 0
    },
    "type": "Cart",
    "visibility": "private",
    "http_method": "DELETE"
  },
  "getUserCartForShop": {
    "name": "getUserCartForShop",
    "description": "Get a cart from a shop ID",
    "uri": "/users/:user_id/carts/shop/:shop_id",
    "params": {
      "user_id": "user_id_or_name",
      "shop_id": "shop_id_or_name"
    },
    "defaults": null,
    "type": "Cart",
    "visibility": "private",
    "http_method": "GET"
  },
  "createSingleListingCart": {
    "name": "createSingleListingCart",
    "description": "Create a single-listing cart from a listing",
    "uri": "/users/:user_id/carts/single_listing",
    "params": {
      "user_id": "user_id_or_name",
      "listing_id": "int",
      "quantity": "int",
      "selected_variations": "map(int, int)"
    },
    "defaults": {
      "quantity": 1,
      "selected_variations": null
    },
    "type": "Cart",
    "visibility": "private",
    "http_method": "POST"
  },
  "findAllUserCharges": {
    "name": "findAllUserCharges",
    "description": "Retrieves a set of BillCharge objects associated to a User. NOTE: from 8/8/12 the min_created and max_created arguments will be mandatory and can be no more than 31 days apart.",
    "uri": "/users/:user_id/charges",
    "params": {
      "limit": "int",
      "offset": "int",
      "page": "int",
      "user_id": "user_id_or_name",
      "sort_order": "enum(up, down)",
      "min_created": "epoch",
      "max_created": "epoch"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null,
      "sort_order": "up",
      "min_created": null,
      "max_created": null
    },
    "type": "BillCharge",
    "visibility": "private",
    "http_method": "GET"
  },
  "getUserChargesMetadata": {
    "name": "getUserChargesMetadata",
    "description": "Metadata for the set of BillCharges objects associated to a User",
    "uri": "/users/:user_id/charges/meta",
    "params": {
      "user_id": "user_id_or_name"
    },
    "defaults": null,
    "type": "Dict",
    "visibility": "private",
    "http_method": "GET"
  },
  "getCirclesContainingUser": {
    "name": "getCirclesContainingUser",
    "description": "Returns a list of users who have circled this user",
    "uri": "/users/:user_id/circles",
    "params": {
      "user_id": "user_id_or_name",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "User",
    "visibility": "public",
    "http_method": "GET"
  },
  "getConnectedUser": {
    "name": "getConnectedUser",
    "description": "Returns details about a connection between users",
    "uri": "/users/:user_id/circles/:to_user_id",
    "params": {
      "user_id": "user_id_or_name",
      "to_user_id": "user_id_or_name",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "User",
    "visibility": "public",
    "http_method": "GET"
  },
  "unconnectUsers": {
    "name": "unconnectUsers",
    "description": "Removes a user (to_user_id) from the logged in user's (user_id) circle",
    "uri": "/users/:user_id/circles/:to_user_id",
    "params": {
      "user_id": "user_id_or_name",
      "to_user_id": "user_id_or_name"
    },
    "defaults": null,
    "type": "User",
    "visibility": "private",
    "http_method": "DELETE"
  },
  "listFollowingPages": {
    "name": "listFollowingPages",
    "description": "Lists the pages that the current user is following",
    "uri": "/users/:user_id/connected_pages",
    "params": {
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "Page",
    "visibility": "public",
    "http_method": "GET"
  },
  "followPage": {
    "name": "followPage",
    "description": "Follow a page.",
    "uri": "/users/:user_id/connected_pages",
    "params": {
      "user_id": "user_id_or_name",
      "page_id": "int"
    },
    "defaults": null,
    "type": null,
    "visibility": "public",
    "http_method": "POST"
  },
  "unfollowPage": {
    "name": "unfollowPage",
    "description": "Unfollow a page.",
    "uri": "/users/:user_id/connected_pages/:page_id",
    "params": {
      "user_id": "user_id_or_name",
      "page_id": "int"
    },
    "defaults": null,
    "type": null,
    "visibility": "public",
    "http_method": "DELETE"
  },
  "getConnectedUsers": {
    "name": "getConnectedUsers",
    "description": "Returns a list of users that are in this user's cricle",
    "uri": "/users/:user_id/connected_users",
    "params": {
      "user_id": "user_id_or_name",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "User",
    "visibility": "public",
    "http_method": "GET"
  },
  "connectUsers": {
    "name": "connectUsers",
    "description": "Adds user (to_user_id) to the user's (user_id) circle",
    "uri": "/users/:user_id/connected_users",
    "params": {
      "user_id": "user_id_or_name",
      "to_user_id": "user_id_or_name"
    },
    "defaults": null,
    "type": "User",
    "visibility": "private",
    "http_method": "POST"
  },
  "findAllUserFavoredBy": {
    "name": "findAllUserFavoredBy",
    "description": "Retrieves a set of FavoriteUser objects associated to a User.",
    "uri": "/users/:user_id/favored-by",
    "params": {
      "user_id": "user_id_or_name",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "FavoriteUser",
    "visibility": "public",
    "http_method": "GET"
  },
  "findAllUserFavoriteListings": {
    "name": "findAllUserFavoriteListings",
    "description": "Finds all favorite listings for a user",
    "uri": "/users/:user_id/favorites/listings",
    "params": {
      "user_id": "user_id_or_name",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "FavoriteListing",
    "visibility": "public",
    "http_method": "GET"
  },
  "findUserFavoriteListings": {
    "name": "findUserFavoriteListings",
    "description": "Finds a favorite listing for a user",
    "uri": "/users/:user_id/favorites/listings/:listing_id",
    "params": {
      "user_id": "user_id_or_name",
      "listing_id": "int"
    },
    "defaults": null,
    "type": "FavoriteListing",
    "visibility": "public",
    "http_method": "GET"
  },
  "createUserFavoriteListings": {
    "name": "createUserFavoriteListings",
    "description": "Creates a new favorite listing for a user",
    "uri": "/users/:user_id/favorites/listings/:listing_id",
    "params": {
      "user_id": "user_id_or_name",
      "listing_id": "int"
    },
    "defaults": null,
    "type": "FavoriteListing",
    "visibility": "private",
    "http_method": "POST"
  },
  "deleteUserFavoriteListings": {
    "name": "deleteUserFavoriteListings",
    "description": "Delete a favorite listing for a user",
    "uri": "/users/:user_id/favorites/listings/:listing_id",
    "params": {
      "user_id": "user_id_or_name",
      "listing_id": "int"
    },
    "defaults": null,
    "type": "FavoriteListing",
    "visibility": "private",
    "http_method": "DELETE"
  },
  "findAllUserFavoriteUsers": {
    "name": "findAllUserFavoriteUsers",
    "description": "Finds all favorite users for a user",
    "uri": "/users/:user_id/favorites/users",
    "params": {
      "user_id": "user_id_or_name",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "FavoriteUser",
    "visibility": "public",
    "http_method": "GET"
  },
  "findUserFavoriteUsers": {
    "name": "findUserFavoriteUsers",
    "description": "Finds a favorite user for a user",
    "uri": "/users/:user_id/favorites/users/:target_user_id",
    "params": {
      "user_id": "user_id_or_name",
      "target_user_id": "user_id_or_name"
    },
    "defaults": null,
    "type": "FavoriteUser",
    "visibility": "public",
    "http_method": "GET"
  },
  "createUserFavoriteUsers": {
    "name": "createUserFavoriteUsers",
    "description": "Creates a new favorite listing for a user",
    "uri": "/users/:user_id/favorites/users/:target_user_id",
    "params": {
      "user_id": "user_id_or_name",
      "target_user_id": "user_id_or_name"
    },
    "defaults": null,
    "type": "FavoriteUser",
    "visibility": "private",
    "http_method": "POST"
  },
  "deleteUserFavoriteUsers": {
    "name": "deleteUserFavoriteUsers",
    "description": "Delete a favorite listing for a user",
    "uri": "/users/:user_id/favorites/users/:target_user_id",
    "params": {
      "user_id": "user_id_or_name",
      "target_user_id": "user_id_or_name"
    },
    "defaults": null,
    "type": "FavoriteUser",
    "visibility": "private",
    "http_method": "DELETE"
  },
  "findAllUserFeedbackAsAuthor": {
    "name": "findAllUserFeedbackAsAuthor",
    "description": "Retrieves a set of Feedback objects associated to a User.",
    "uri": "/users/:user_id/feedback/as-author",
    "params": {
      "user_id": "user_id_or_name",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "Feedback",
    "visibility": "public",
    "http_method": "GET"
  },
  "findAllUserFeedbackAsBuyer": {
    "name": "findAllUserFeedbackAsBuyer",
    "description": "Retrieves a set of Feedback objects associated to a User.",
    "uri": "/users/:user_id/feedback/as-buyer",
    "params": {
      "user_id": "user_id_or_name",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "Feedback",
    "visibility": "public",
    "http_method": "GET"
  },
  "findAllUserFeedbackAsSeller": {
    "name": "findAllUserFeedbackAsSeller",
    "description": "Retrieves a set of Feedback objects associated to a User.",
    "uri": "/users/:user_id/feedback/as-seller",
    "params": {
      "user_id": "user_id_or_name",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "Feedback",
    "visibility": "public",
    "http_method": "GET"
  },
  "findAllUserFeedbackAsSubject": {
    "name": "findAllUserFeedbackAsSubject",
    "description": "Retrieves a set of Feedback objects associated to a User.",
    "uri": "/users/:user_id/feedback/as-subject",
    "params": {
      "user_id": "user_id_or_name",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "Feedback",
    "visibility": "public",
    "http_method": "GET"
  },
  "findAllFeedbackFromBuyers": {
    "name": "findAllFeedbackFromBuyers",
    "description": "\n                    Returns a set of FeedBack objects associated to a User.\n                    This is essentially the union between the findAllUserFeedbackAsBuyer\n                    and findAllUserFeedbackAsSubject methods.",
    "uri": "/users/:user_id/feedback/from-buyers",
    "params": {
      "user_id": "user_id_or_name",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "user_id": null,
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "Feedback",
    "visibility": "public",
    "http_method": "GET"
  },
  "findAllFeedbackFromSellers": {
    "name": "findAllFeedbackFromSellers",
    "description": "\n                    Returns a set of FeedBack objects associated to a User.\n                    This is essentially the union between\n                    the findAllUserFeedbackAsBuyer and findAllUserFeedbackAsSubject methods.",
    "uri": "/users/:user_id/feedback/from-sellers",
    "params": {
      "user_id": "user_id_or_name",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "user_id": null,
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "Feedback",
    "visibility": "public",
    "http_method": "GET"
  },
  "findAllUserPayments": {
    "name": "findAllUserPayments",
    "description": "Retrieves a set of BillPayment objects associated to a User.",
    "uri": "/users/:user_id/payments",
    "params": {
      "limit": "int",
      "offset": "int",
      "page": "int",
      "user_id": "user_id_or_name",
      "sort_order": "enum(up, down)",
      "min_created": "epoch",
      "max_created": "epoch"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null,
      "sort_order": "up",
      "min_created": null,
      "max_created": null
    },
    "type": "BillPayment",
    "visibility": "private",
    "http_method": "GET"
  },
  "findAllUserPaymentTemplates": {
    "name": "findAllUserPaymentTemplates",
    "description": "Retrieves a set of PaymentTemplate objects associated to a User.",
    "uri": "/users/:user_id/payments/templates",
    "params": {
      "user_id": "user_id_or_name"
    },
    "defaults": null,
    "type": "PaymentTemplate",
    "visibility": "private",
    "http_method": "GET"
  },
  "findUserProfile": {
    "name": "findUserProfile",
    "description": "Returns the UserProfile object associated with a User.",
    "uri": "/users/:user_id/profile",
    "params": {
      "user_id": "user_id_or_name"
    },
    "defaults": null,
    "type": "UserProfile",
    "visibility": "public",
    "http_method": "GET"
  },
  "updateUserProfile": {
    "name": "updateUserProfile",
    "description": "Updates the UserProfile object associated with a User. <br /><b>Notes:</b><ul><li>Name changes are subject to admin review and therefore unavailable via the API.</li><li>Materials must be provided as a <i>period-separated</i> list of ASCII words.</ul>",
    "uri": "/users/:user_id/profile",
    "params": {
      "user_id": "user_id_or_name",
      "bio": "text",
      "gender": "string",
      "birth_month": "int",
      "birth_day": "int",
      "birth_year": "int",
      "materials": "string",
      "country_id": "string",
      "region": "string",
      "city": "string"
    },
    "defaults": {
      "bio": null,
      "gender": null,
      "birth_month": null,
      "birth_day": null,
      "birth_year": null,
      "materials": null,
      "country_id": null,
      "region": null,
      "city": null
    },
    "type": "UserProfile",
    "visibility": "private",
    "http_method": "PUT"
  },
  "findAllUserBuyerReceipts": {
    "name": "findAllUserBuyerReceipts",
    "description": "Retrieves a set of Receipt objects associated to a User.",
    "uri": "/users/:user_id/receipts",
    "params": {
      "user_id": "user_id_or_name",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "Receipt",
    "visibility": "private",
    "http_method": "GET"
  },
  "findAllUserShippingProfiles": {
    "name": "findAllUserShippingProfiles",
    "description": "Retrieves a set of ShippingTemplate objects associated to a User.",
    "uri": "/users/:user_id/shipping/templates",
    "params": {
      "user_id": "user_id_or_name",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "ShippingTemplate",
    "visibility": "private",
    "http_method": "GET"
  },
  "findAllUserShops": {
    "name": "findAllUserShops",
    "description": "Retrieves a set of Shop objects associated to a User.",
    "uri": "/users/:user_id/shops",
    "params": {
      "user_id": "user_id_or_name",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "Shop",
    "visibility": "public",
    "http_method": "GET"
  },
  "findAllTeamsForUser": {
    "name": "findAllTeamsForUser",
    "description": "Returns a list of teams for a specific user",
    "uri": "/users/:user_id/teams",
    "params": {
      "user_id": "user_id_or_name",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "Team",
    "visibility": "public",
    "http_method": "GET"
  },
  "findAllUserBuyerTransactions": {
    "name": "findAllUserBuyerTransactions",
    "description": "Retrieves a set of Transaction objects associated to a User.",
    "uri": "/users/:user_id/transactions",
    "params": {
      "user_id": "user_id_or_name",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "Transaction",
    "visibility": "private",
    "http_method": "GET"
  },
  "findAllUserTreasuries": {
    "name": "findAllUserTreasuries",
    "description": "Get a user's Treasuries. <strong>Note:</strong> The <code>treasury_r</code> permission scope is required in order to display private Treasuries for a user when the boolean parameter <code>include_private</code> is <code>true</code>.",
    "uri": "/users/:user_id/treasuries",
    "params": {
      "user_id": "user_id_or_name",
      "sort_on": "enum(hotness, created)",
      "sort_order": "enum(up, down)",
      "include_private": "boolean",
      "limit": "int",
      "offset": "int",
      "page": "int"
    },
    "defaults": {
      "sort_on": "hotness",
      "sort_order": "down",
      "include_private": 0,
      "limit": 25,
      "offset": 0,
      "page": null
    },
    "type": "Treasury",
    "visibility": "public",
    "http_method": "GET"
  }
}
